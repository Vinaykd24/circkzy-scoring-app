[{"/home/vinay/Documents/project/circkzy-scoring-app/src/index.js":"1","/home/vinay/Documents/project/circkzy-scoring-app/src/App.js":"2","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.provider.jsx":"3","/home/vinay/Documents/project/circkzy-scoring-app/src/firebase/config.js":"4","/home/vinay/Documents/project/circkzy-scoring-app/src/components/homepage.component.jsx":"5","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/Signup.component.jsx":"6","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score.component.jsx":"7","/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/addPlayer.component.jsx":"8","/home/vinay/Documents/project/circkzy-scoring-app/src/components/match-details/match-details.component.jsx":"9","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.util.js":"10","/home/vinay/Documents/project/circkzy-scoring-app/src/data.js":"11","/home/vinay/Documents/project/circkzy-scoring-app/src/tempData.js":"12","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/table-grid.jsx":"13","/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/add-player-form.component.jsx":"14","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/modal/selection-modal.jsx":"15","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/player-list/player-list.jsx":"16","/home/vinay/Documents/project/circkzy-scoring-app/src/components/initial-player-details/initial-player-details.component.jsx":"17","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score-book.component.jsx":"18","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score.reducer.js":"19","/home/vinay/Documents/project/circkzy-scoring-app/src/components/match-details/test.component.jsx":"20","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.reducer.js":"21","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.actions.js":"22","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/currentScoreboard.jsx":"23","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/update-score.component.jsx":"24","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/test-data.js":"25"},{"size":413,"mtime":1611937034299,"results":"26","hashOfConfig":"27"},{"size":1518,"mtime":1611936598397,"results":"28","hashOfConfig":"27"},{"size":4536,"mtime":1611957149679,"results":"29","hashOfConfig":"27"},{"size":489,"mtime":1611587663320,"results":"30","hashOfConfig":"27"},{"size":213,"mtime":1611587663320,"results":"31","hashOfConfig":"27"},{"size":1386,"mtime":1611587663320,"results":"32","hashOfConfig":"27"},{"size":11721,"mtime":1612881014873,"results":"33","hashOfConfig":"27"},{"size":5036,"mtime":1612881014729,"results":"34","hashOfConfig":"27"},{"size":5450,"mtime":1612883424116,"results":"35","hashOfConfig":"27"},{"size":15830,"mtime":1612882744323,"results":"36","hashOfConfig":"27"},{"size":469,"mtime":1611587663320,"results":"37","hashOfConfig":"27"},{"size":4088,"mtime":1611587663320,"results":"38","hashOfConfig":"27"},{"size":2022,"mtime":1611587663320,"results":"39","hashOfConfig":"27"},{"size":789,"mtime":1611758877708,"results":"40","hashOfConfig":"27"},{"size":991,"mtime":1612219923439,"results":"41","hashOfConfig":"27"},{"size":1776,"mtime":1611690299716,"results":"42","hashOfConfig":"27"},{"size":3791,"mtime":1612881014825,"results":"43","hashOfConfig":"27"},{"size":2896,"mtime":1612881014849,"results":"44","hashOfConfig":"27"},{"size":1402,"mtime":1611873511784,"results":"45","hashOfConfig":"27"},{"size":516,"mtime":1611950148378,"results":"46","hashOfConfig":"27"},{"size":7749,"mtime":1612882759575,"results":"47","hashOfConfig":"27"},{"size":1296,"mtime":1612881015001,"results":"48","hashOfConfig":"27"},{"size":6626,"mtime":1612887459894,"results":"49","hashOfConfig":"27"},{"size":10737,"mtime":1612881895171,"results":"50","hashOfConfig":"27"},{"size":5498,"mtime":1612882753187,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1296yd9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/vinay/Documents/project/circkzy-scoring-app/src/index.js",[],["116","117"],"/home/vinay/Documents/project/circkzy-scoring-app/src/App.js",["118","119"],"import \"./App.css\";\nimport \"./firebase/config\";\nimport { Route, Switch, BrowserRouter, Router } from \"react-router-dom\";\n\nimport HomePage from \"./components/homepage.component\";\nimport Signup from \"./pages/Signup.component\";\nimport ScorePage from \"./components/score/score.component\";\nimport AddPlayerPage from \"./components/add-player/addPlayer.component\";\nimport MatchDetails from \"./components/match-details/match-details.component\";\nimport InitialPlayerDetails from \"./components/initial-player-details/initial-player-details.component\";\nimport ScoreBoardPage from \"./components/score/score-book.component\";\nimport TestComponent from \"./components/match-details/test.component\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/test\" component={TestComponent} />\n        <Route path=\"/matchDetails\" component={MatchDetails} />\n        <Route path=\"/score\" component={ScorePage} />\n        <Route path=\"/scoreboard\" component={ScoreBoardPage} />\n        <Route path=\"/addPlayers\" component={AddPlayerPage} />\n        <Route path=\"/currentStats\" component={InitialPlayerDetails} />\n        {/* <Route\n          path=\"/addPlayers\"\n          component={() => <AddPlayerPage isHomeTeam=\"true\" />}\n        /> */}\n        <Route\n          path=\"/score\"\n          component={() => <ScorePage awayTeam=\"Infosys\" homeTeam=\"TCS\" />}\n        />\n      </Switch>\n      {/* <HomePage /> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.provider.jsx",["120","121","122","123","124","125"],"import React, { createContext, useState, useReducer } from \"react\";\nimport { matchReducer, initialState } from \"./match.reducer\";\nimport {\n  addPlayerToList,\n  removePlayerFromList,\n  addMatchDetailsToDb,\n  addPlayerObj,\n  removeObj,\n  updateCurrentStats,\n} from \"./match.util\";\n\nexport const MatchContext = createContext({\n  playerList: {\n    homeTeam: [],\n    awayTeam: [],\n    homeTeamClone: {},\n    awayTeamClone: {},\n  },\n  // matchDetails: {\n  //   homeTeamName: \"\",\n  //   awayTeamName: \"\",\n  //   venue: \"\",\n  //   tournametName: \"\",\n  //   tossWonBy: \"\",\n  //   electedTo: \"\",\n  //   teamBatingFirst: \"\",\n  //   isHomTeamBattingFirst: false,\n  // },\n  currentStats: { striker: \"\", nonStriker: \"\", currentBowler: \"\" },\n  inn1: {\n    battingTeam: {},\n    bowlingTeam: {},\n  },\n  // addMatchDetails: () => {},\n  // addPlayer: () => {},\n  // removePlayer: () => {},\n});\n\nconst MatchProvider = ({ children }) => {\n  const [rootState, dispatch] = useReducer(matchReducer, initialState);\n  // const [matchDetails, setMatchDetails] = useState({\n  //   homeTeamName: \"\",\n  //   awayTeamName: \"\",\n  //   venue: \"\",\n  //   tournametName: \"\",\n  //   tossWonBy: \"\",\n  //   electedTo: \"\",\n  //   teamBatingFirst: \"\",\n  //   isHomTeamBattingFirst: false,\n  // });\n  // const addMatchDetails = (matchDetails) =>\n  //   setMatchDetails(addMatchDetailsToDb(matchDetails));\n  const [playerList, setPlayerList] = useState({\n    homeTeam: [],\n    awayTeam: [],\n    homeTeamClone: {},\n    awayTeamClone: {},\n  });\n  const [currentStats, setCurrentStats] = useState({\n    striker: \"\",\n    nonStriker: \"\",\n    currentBowler: \"\",\n  });\n  const [inn1, setInn1] = useState({ battingTeam: {}, bowlingTeam: {} });\n  const updateBattingTeam = () => {\n    if (rootState.matchDetails.isHomTeamBattingFirst) {\n      setInn1({\n        ...inn1,\n        battingTeam: playerList.homeTeamClone,\n        bowlingTeam: playerList.awayTeamClone,\n      });\n    } else {\n      setInn1({\n        ...inn1,\n        battingTeam: playerList.awayTeamClone,\n        bowlingTeam: playerList.homeTeamClone,\n      });\n    }\n  };\n  const addCurrentStatsDetails = (statDetails) => {\n    setCurrentStats(\n      updateCurrentStats(statDetails, inn1.battingTeam, inn1.bowlingTeam)\n    );\n  };\n  // const addPlayer = (player, isHomeTeam) =>\n  //   isHomeTeam\n  //     ? setPlayerList({\n  //         ...playerList,\n  //         homeTeam: addPlayerToList(playerList.homeTeam, player),\n  //         homeTeamClone: {\n  //           ...playerList.homeTeamClone,\n  //           [player.id]: {\n  //             ...player,\n  //             runs: 0,\n  //             ballsPlayed: 0,\n  //             fours: 0,\n  //             sixes: 0,\n  //             overs: 0,\n  //             balls: 0,\n  //             maidens: 0,\n  //             wkts: 0,\n  //             wbs: 0,\n  //             nbs: 0,\n  //           },\n  //         },\n  //       })\n  //     : setPlayerList({\n  //         ...playerList,\n  //         awayTeam: addPlayerToList(playerList.awayTeam, player),\n  //         awayTeamClone: {\n  //           ...playerList.awayTeamClone,\n  //           [player.id]: {\n  //             ...player,\n  //             runs: 0,\n  //             ballsPlayed: 0,\n  //             fours: 0,\n  //             sixes: 0,\n  //             overs: 0,\n  //             balls: 0,\n  //             maidens: 0,\n  //             wkts: 0,\n  //             wbs: 0,\n  //             nbs: 0,\n  //           },\n  //         },\n  //       });\n  // const removePlayer = (playerId, isHomeTeam) =>\n  //   isHomeTeam\n  //     ? setPlayerList({\n  //         ...playerList,\n  //         // homeTeam: removePlayerFromList(playerList.homeTeam, playerId),\n  //         homeTeamClone: removeObj(playerList.homeTeamClone, playerId),\n  //       })\n  //     : setPlayerList({\n  //         ...playerList,\n  //         // awayTeam: removePlayerFromList(playerList.awayTeam, playerId),\n  //         awayTeamClone: removeObj(playerList.awayTeamClone, playerId),\n  //       });\n  // const homeTeamClone = setPlayerList({\n  //   ...playerList,\n  //   homeTeamClone: convertArrayToObject(playerList.homeTeam),\n  // });\n  return (\n    <MatchContext.Provider\n      value={{\n        playerList,\n        // addPlayer,\n        // removePlayer,\n        // matchDetails,\n        // addMatchDetails,\n        currentStats,\n        addCurrentStatsDetails,\n        inn1,\n        updateBattingTeam,\n        rootState,\n        rootDispatch: dispatch,\n      }}\n    >\n      {children}\n    </MatchContext.Provider>\n  );\n};\n\nexport default MatchProvider;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/firebase/config.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/homepage.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/Signup.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score.component.jsx",["126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { useState } from \"react\";\nimport { Button, Modal, Label, Radio, Form, Icon } from \"semantic-ui-react\";\nimport TableGridPage from \"../../pages/table-grid\";\nimport batsManList from \"../../data\";\nimport matchData from \"../../tempData\";\nimport SelectionModalPage from \"../../pages/modal/selection-modal\";\nimport { firestore } from \"../../firebase/config\";\n\nconst exampleReducer = (state, action) => {\n  switch (action.type) {\n    case \"close\":\n      return { open: false };\n    case \"open\":\n      return { open: true, size: action.size, dimmer: action.dimmer };\n    default:\n      throw new Error(\"Unsupported action...\");\n  }\n};\n\nconst ScorePage = ({ homeTeam, awayTeam }) => {\n  const [playerDoc, setPlayerDoc] = useState(null);\n  const [totalScore, setTotalScore] = useState(0);\n  const [totalWickets, setTotalWickets] = useState(0);\n  const [totalExtras, setTotalExtras] = useState(0);\n  const [totalBalls, setTotalBalls] = useState(0);\n  const [totalOvers, setTotalOvers] = useState(0);\n  const [isWicketFallen, setIsWicketFallen] = useState(false);\n  const [prgressiveOver, setPrgressiveOver] = useState([]);\n  const [striker, setStriker] = useState(\"bat1\");\n  const [nonStriker, setNonStriker] = useState(\"bat2\");\n  const [tempBatsmanList, setTempBatsmanList] = useState(batsManList);\n  const [currentBowler, setCurrentBowler] = useState({\n    id: \"bowl1\",\n    name: \"Nathan Lyon\",\n    balls: 0,\n    overs: 0,\n    wickets: 0,\n    maidens: 0,\n    runsGiven: 0,\n    wides: 0,\n    nbs: 0,\n  });\n  const [bowlerDetails, setBowlerDetails] = useState({\n    bowl1: {\n      id: \"bowl1\",\n      name: \"Nathan Lyon\",\n      balls: 0,\n      overs: 0,\n      wickets: 0,\n      maidens: 0,\n      runsGiven: 0,\n      wides: 0,\n      nbs: 0,\n    },\n    bowl2: {\n      id: \"bowl2\",\n      name: \"Michel Starc\",\n      balls: 0,\n      overs: 0,\n      wickets: 0,\n      maidens: 0,\n      runsGiven: 0,\n      wides: 0,\n      nbs: 0,\n    },\n  });\n  const [batsmenDetails, setBatsmenDetails] = useState({\n    bat1: {\n      id: \"bat1\",\n      name: \"Rohil Sharma\",\n      runs: 0,\n      ballsPlayed: 0,\n      fours: 0,\n      sixes: 0,\n    },\n    bat2: {\n      id: \"bat2\",\n      name: \"Shubham Gill\",\n      runs: 0,\n      ballsPlayed: 0,\n      fours: 0,\n      sixes: 0,\n    },\n  });\n\n  const updateWickets = () => {\n    if (totalWickets <= 10) {\n      setIsWicketFallen(true);\n      setTotalWickets(totalWickets + 1);\n      setPrgressiveOver(prgressiveOver.concat(\"W\"));\n      setCurrentBowler({\n        ...currentBowler,\n        wickets: currentBowler[\"wickets\"]++,\n      });\n    }\n    updateOver();\n    setPrgressiveOver(prgressiveOver.concat(\"W\"));\n  };\n\n  const updateExtras = (extras, score) => {\n    switch (extras) {\n      case \"WB\":\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        setCurrentBowler({\n          ...currentBowler,\n          wides: currentBowler[\"wides\"] + 1,\n        });\n        break;\n      case \"NB\":\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        setCurrentBowler({\n          ...currentBowler,\n          wides: currentBowler[\"nbs\"] + 1,\n        });\n        break;\n      case \"B\":\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        break;\n      case \"LB\":\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeStriker = () => {\n    const temp = striker;\n    setStriker(nonStriker);\n    setNonStriker(temp);\n  };\n\n  const updateBatsMan = () => {};\n\n  const updateBatsManScore = (score) => {\n    switch (score) {\n      case 1:\n      case 3:\n        batsmenDetails[striker][\"runs\"] += score;\n        changeStriker();\n        break;\n      case 2:\n        batsmenDetails[striker][\"runs\"] += score;\n        break;\n      case 4:\n        batsmenDetails[striker][\"runs\"] += score;\n        batsmenDetails[striker][\"fours\"]++;\n        break;\n      case 6:\n        batsmenDetails[striker][\"runs\"] += score;\n        batsmenDetails[striker][\"sixes\"]++;\n        break;\n      default:\n        break;\n    }\n    batsmenDetails[striker][\"ballsPlayed\"]++;\n  };\n\n  const currentPartnerShip = () => {\n    const runTotal =\n      batsmenDetails[\"bat1\"][\"runs\"] + batsmenDetails[\"bat2\"][\"runs\"];\n    const ballTotal =\n      batsmenDetails[\"bat1\"][\"ballsPlayed\"] +\n      batsmenDetails[\"bat2\"][\"ballsPlayed\"];\n    return `${runTotal}(${ballTotal})`;\n  };\n\n  const updateScore = (score) => {\n    setTotalScore(totalScore + score);\n    updateBatsManScore(score);\n    const bowlId = currentBowler[\"id\"];\n    // setCurrentBowler({\n    //   ...currentBowler,\n    //   runsGiven: currentBowler['runsGiven'] + score,\n    // });\n    currentBowler[\"runsGiven\"] = currentBowler[\"runsGiven\"] + score;\n    setBowlerDetails((preStateValue) => ({\n      ...preStateValue,\n      [bowlId]: currentBowler,\n    }));\n    setPrgressiveOver(prgressiveOver.concat(score));\n    updateOver();\n  };\n\n  const updateOver = () => {\n    const _totalBalls = totalBalls + 1;\n    const _totalOvers = calcOver(_totalBalls);\n    setTotalBalls(_totalBalls);\n    setTotalOvers(_totalOvers);\n    const _currentBowlerTotalBalls = currentBowler[\"balls\"] + 1;\n    setCurrentBowler({\n      ...currentBowler,\n      balls: _currentBowlerTotalBalls,\n      overs: calcOver(_currentBowlerTotalBalls),\n    });\n    if (_totalOvers % 1 === 0) {\n      changeStriker();\n      openModal();\n    }\n  };\n\n  const calcOver = (balls) => {\n    return Math.floor(balls / 6) + (balls % 6) / 10;\n  };\n\n  const updateBowler = (bowler) => {\n    if (currentBowler[\"id\"] !== bowler[\"id\"]) {\n      setCurrentBowler(bowler);\n      setBowlerDetails((prevStateValue) => ({\n        ...prevStateValue,\n        [currentBowler[\"id\"]]: currentBowler,\n      }));\n      dispatch({ type: \"close\" });\n    } else {\n      alert(\"You can not select same bowler again!\");\n    }\n  };\n\n  const selectBatsman = (batsman) => {\n    console.log(\"Select batsman logic goes here!\");\n    setIsWicketFallen(false);\n    dispatch({ type: \"close\" });\n  };\n\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    open: false,\n    size: undefined,\n  });\n  const { open, size, dimmer } = state;\n\n  const openModal = () => {\n    console.log(isWicketFallen);\n    dispatch({ type: \"open\", size: \"mini\", dimmer: \"blurring\" });\n  };\n\n  const handleClick = () => {\n    console.log(\"Clickeddd from child!\");\n  };\n\n  React.useEffect(() => {\n    console.log(\"Effect called\");\n    setIsWicketFallen(true);\n    console.log(isWicketFallen);\n    if (isWicketFallen) {\n      openModal();\n    }\n  }, [totalWickets]);\n\n  const tempSetDemoData = async () => {\n    const batData = {\n      name: \"Rohil Sharma\",\n      runs: 0,\n      ballsPlayed: 0,\n      fours: 0,\n      sixes: 0,\n      isOut: false,\n      isStriker: false,\n    };\n    const bowlData = {\n      name: \"Nathan Lyon\",\n      balls: 0,\n      overs: 0,\n      wickets: 0,\n      maidens: 0,\n      runsGiven: 0,\n      wides: 0,\n      nbs: 0,\n      isCurrentBowler: false,\n    };\n\n    // return res;\n  };\n\n  const readCollection = async () => {\n    const citiesRef = firestore.collection(\"matches\");\n    const snapshot = await citiesRef.get();\n    snapshot.forEach((doc) => {\n      console.log(doc.id, \"=>\", doc.data());\n    });\n  };\n\n  React.useEffect(() => {\n    const docRef = firestore.collection(\"matches\").doc(\"xRYLB0CguU2ZfGRmpkAa\");\n    // const docRef = firestore.collection(\n    //   '/matches/xRYLB0CguU2ZfGRmpkAa/inn1/batStats'\n    // );\n    // firestore.collection('players').doc('0TFXRjMv7Jl6VPaQOSkK').get()\n    //   .then(snapshot => {\n    //     snapshot.forEach(doc => {\n    //       const data = doc.data();\n    //       console.log(doc.id, data);\n    //     });\n    //   })\n    //   .catch(err => {\n    //     console.log('Error getting documents', err);\n    //   });\n    // docRef.get().then((document) => {\n    //   if (document.exists) {\n    //     console.log(document.data());\n    //   }\n    // });\n    readCollection();\n    // tempSetDemoData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"tc\">\n        <h1 className=\"mb0\">\n          {homeTeam} <span> VS </span>\n          {awayTeam}\n        </h1>\n        <h1 className=\"ma0\">\n          <p className=\"mb0\">{homeTeam}</p>\n          {totalScore} / {totalWickets}\n          <p className=\"f6 ml2\">(Extras: {totalExtras})</p>\n          <p className=\"f6\">Overs: {totalOvers}</p>\n        </h1>\n        <h4 className=\"mt0 pv2\">Current Partnership: {currentPartnerShip()}</h4>\n      </div>\n      <TableGridPage\n        isBatsMan=\"true\"\n        batsmenDetails={batsmenDetails}\n        currentBowler={currentBowler}\n        handleClick={handleClick}\n      />\n      <div className=\"mh3\">\n        <Button size=\"huge\" onClick={() => updateScore(1)}>\n          1\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(2)}>\n          2\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(3)}>\n          3\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(4)}>\n          4\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(6)}>\n          6\n        </Button>\n        <Button size=\"huge\" onClick={updateWickets}>\n          Wicket\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras(\"WB\")}>\n          WB\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras(\"NB\")}>\n          NB\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras(\"B\")}>\n          B\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras(\"LB\")}>\n          LB\n        </Button>\n        <Button\n          icon\n          size=\"huge\"\n          onClick={() =>\n            dispatch({\n              type: \"open\",\n              size: \"mini\",\n              dimmer: \"blurring\",\n            })\n          }\n        >\n          <Icon name=\"refresh\" />\n        </Button>\n      </div>\n      {/* <SelectionModalPage\n        bowlerDetails={bowlerDetails}\n        currentBowler={currentBowler}\n        updateBowler={updateBowler}\n      /> */}\n      <>\n        {isWicketFallen ? (\n          <Modal\n            size={size}\n            open={open}\n            dimmer={dimmer}\n            onClose={() => dispatch({ type: \"close\" })}\n          >\n            <Modal.Header>Select Next Batsman</Modal.Header>\n            <Modal.Content>\n              <p>Select Next Batsman</p>\n              <div>\n                {Object.entries(tempBatsmanList).map(([key, value], i) => (\n                  <Form.Field key={i}>\n                    <Radio\n                      className=\"b\"\n                      key={i}\n                      label={value[\"name\"]}\n                      disabled={striker === value[\"id\"]}\n                      onChange={() => selectBatsman(value)}\n                    />\n                  </Form.Field>\n                ))}\n              </div>\n            </Modal.Content>\n          </Modal>\n        ) : (\n          <Modal\n            size={size}\n            open={open}\n            dimmer={dimmer}\n            onClose={() => dispatch({ type: \"close\" })}\n          >\n            <Modal.Header>Chanage Bowler</Modal.Header>\n            <Modal.Content>\n              <p>Are you sure you want to delete your account</p>\n              <div>\n                {Object.entries(bowlerDetails).map(([key, value], i) => (\n                  <Form.Field key={i}>\n                    <Radio\n                      className=\"b\"\n                      key={i}\n                      label={value[\"name\"]}\n                      disabled={currentBowler[\"id\"] === value[\"id\"]}\n                      onChange={() => updateBowler(value)}\n                    />\n                  </Form.Field>\n                ))}\n              </div>\n            </Modal.Content>\n          </Modal>\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default ScorePage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/addPlayer.component.jsx",["139","140","141","142"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport uuid from \"react-uuid\";\nimport { firestore } from \"../../firebase/config\";\nimport { Button, Input, Form } from \"semantic-ui-react\";\nimport PlayerListPage from \"../../pages/player-list/player-list\";\n\nimport { MatchContext } from \"../../providers/match/match.provider\";\nimport AddPlayerFormPage from \"./add-player-form.component\";\nimport {\n  ADD_AWAY_TEAM_PLAYER,\n  ADD_HOME_TEAM_PLAYER,\n  REMOVE_HOME_PLAYER,\n  REMOVE_AWAY_PLAYER,\n  SET_BATTING_TEAM,\n} from \"../../providers/match/match.actions\";\n\nconst AddPlayerPage = () => {\n  let history = useHistory();\n  const {\n    // addPlayer,\n    // removePlayer,\n    // playerList,\n    // matchDetails,\n    updateBattingTeam,\n    rootState,\n    rootDispatch,\n  } = useContext(MatchContext);\n  console.log(rootState);\n  const { playerList } = rootState;\n  const [awayPlayer, setAwayPlayer] = useState(\"\");\n  const [homePlayer, setHomePlayer] = useState(\"\");\n  // const [homeTeamList, setHomeTeamList] = useState([]);\n  // const [awayTeamList, setAwayTeamList] = useState([]);\n  const [isPlayerListFinalized, setIsPlayerListFinalized] = useState(false);\n\n  const handleHomeTeamSubmit = (evt, isHomeTeam, teamCategory) => {\n    evt.preventDefault();\n    const homePlayerObj = {\n      id: uuid(),\n      playerName: isHomeTeam ? homePlayer : awayPlayer,\n    };\n    // addPlayer(homePlayerObj, isHomeTeam);\n    isHomeTeam\n      ? rootDispatch({ type: ADD_HOME_TEAM_PLAYER, player: homePlayerObj })\n      : rootDispatch({ type: ADD_AWAY_TEAM_PLAYER, player: homePlayerObj });\n    isHomeTeam ? setHomePlayer(\"\") : setAwayPlayer(\"\");\n    // setHomeTeamList(homeTeamList.concat(homePlayerCopy));\n    // setHomePlayer('');\n    // if (playerList[teamCategory].length === 10) {\n    //   updateDb(teamCategory);\n    // }\n  };\n\n  const addPlayerName = (playerName, isHomeTeam) => {\n    isHomeTeam ? setHomePlayer(playerName) : setAwayPlayer(playerName);\n  };\n\n  const handleDelete = (playerId, isHomeTeam) => {\n    isHomeTeam\n      ? rootDispatch({ type: REMOVE_HOME_PLAYER, playerId: playerId })\n      : rootDispatch({ type: REMOVE_AWAY_PLAYER, playerId: playerId });\n    // removePlayer(playerId, isHomeTeam);\n  };\n\n  const updateDb = async (teamCategory) => {\n    await firestore\n      .collection(\"matches\")\n      .doc()\n      .set({\n        playerList: {\n          homeTeam: playerList[teamCategory],\n        },\n      });\n  };\n\n  const confirmPlayerList = () => {\n    rootDispatch({ type: SET_BATTING_TEAM });\n    updateBattingTeam();\n    history.push(\"/currentStats\");\n  };\n  return (\n    <>\n      <div className=\"flex justify-center pa2\">\n        <div className=\"outline w-100 pa3 mr2\">\n          <AddPlayerFormPage\n            handleHomeTeamSubmit={handleHomeTeamSubmit}\n            playerList={playerList}\n            addPlayerName={addPlayerName}\n            homePlayer={homePlayer}\n            teamName={rootState.matchDetails.homeTeamName}\n            teamCategory=\"homeTeam\"\n            isHomeTeam={true}\n          />\n\n          {playerList.homeTeamClone !== null ||\n          playerList.homeTeamClone !== undefined ? (\n            <PlayerListPage\n              playerList={playerList.homeTeam}\n              playerListClone={playerList.homeTeamClone}\n              handleDelete={handleDelete}\n              isHomeTeam={true}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"outline w-100 pa3 mr2\">\n          <AddPlayerFormPage\n            handleHomeTeamSubmit={handleHomeTeamSubmit}\n            playerList={playerList}\n            addPlayerName={addPlayerName}\n            homePlayer={awayPlayer}\n            teamName={rootState.matchDetails.awayTeamName}\n            teamCategory=\"awayTeam\"\n            isHomeTeam={false}\n          />\n          {playerList.homeTeamClone !== null ||\n          playerList.homeTeamClone !== undefined ? (\n            <PlayerListPage\n              playerList={playerList.awayTeam}\n              playerListClone={playerList.awayTeamClone}\n              handleDelete={handleDelete}\n              isHomeTeam={false}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <Button\n          type=\"button\"\n          onClick={confirmPlayerList}\n          disabled={isPlayerListFinalized}\n        >\n          Confirm Teams\n        </Button>\n      </div>\n      <div>\n        {/* {playerList.homeTeamClone !== null ||\n        playerList.homeTeamClone !== undefined ? (\n          Object.keys(playerList.homeTeamClone).map((keyName, i) => (\n            <li className=\"travelcompany-input\" key={i}>\n              <span className=\"input-label\">\n                key: {i} Name: {playerList.homeTeamClone[keyName]['playerName']}\n              </span>\n            </li>\n          ))\n        ) : (\n          <p>List is not ready</p>\n        )} */}\n      </div>\n    </>\n  );\n};\n\nexport default AddPlayerPage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/match-details/match-details.component.jsx",["143","144"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Input, Form } from \"semantic-ui-react\";\nimport { ADD_MATCH_DETAILS } from \"../../providers/match/match.actions\";\nimport { MatchContext } from \"../../providers/match/match.provider\";\n\nconst MatchDetails = () => {\n  const { addMatchDetails, matchDetails, rootDispatch } = useContext(\n    MatchContext\n  );\n  let history = useHistory();\n\n  const [state, setstate] = useState({\n    homeTeamName: \"\",\n    awayTeamName: \"\",\n    venue: \"\",\n    tournametName: \"\",\n    tossWonBy: \"\",\n    electedTo: \"\",\n    teamBatingFirst: \"\",\n    isHomTeamBattingFirst: false,\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateTeamBattingFirst();\n    // addMatchDetails(state);\n    rootDispatch({ type: ADD_MATCH_DETAILS, matchDetails: state });\n\n    setstate({\n      homeTeamName: \"\",\n      awayTeamName: \"\",\n      venue: \"\",\n      tournametName: \"\",\n      tossWonBy: \"\",\n      electedTo: \"\",\n      teamBatingFirst: \"\",\n      teamBatingSecond: \"\",\n      isHomTeamBattingFirst: false,\n    });\n    history.push(\"/addPlayers\");\n  };\n\n  const updateSelection = (e) => {\n    if (\n      (state.homeTeamName.toLowerCase() ===\n        state.tossWonBy.toLocaleLowerCase() &&\n        e.target.value === \"BAT\") ||\n      (state.awayTeamName.toLowerCase() ===\n        state.tossWonBy.toLocaleLowerCase() &&\n        e.target.value === \"BOWL\")\n    ) {\n      setstate({\n        ...state,\n        electedTo: e.target.value,\n        isHomTeamBattingFirst: true,\n        teamBatingFirst: state.homeTeamName,\n        teamBatingSecond: state.awayTeamName,\n      });\n    } else {\n      setstate({\n        ...state,\n        electedTo: e.target.value,\n        teamBatingFirst: state.awayTeamName,\n        teamBatingSecond: state.homeTeamName,\n      });\n    }\n  };\n\n  const updateTeamBattingFirst = () => {};\n\n  return (\n    <div className=\"pa3\">\n      <h3>Add Match Details</h3>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field required>\n          <label>Tournamet Name</label>\n          <Input\n            placeholder=\"Tournamet Name\"\n            name=\"tourName\"\n            value={state.tournametName}\n            onChange={(e) =>\n              setstate({ ...state, tournametName: e.target.value })\n            }\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Venue Name</label>\n          <Input\n            placeholder=\"Venue Name\"\n            name=\"venue\"\n            value={state.venue}\n            onChange={(e) => setstate({ ...state, venue: e.target.value })}\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Home Team</label>\n          <Input\n            placeholder=\"Home Team Name\"\n            name=\"homeTeamName\"\n            value={state.homeTeamName}\n            onChange={(e) =>\n              setstate({ ...state, homeTeamName: e.target.value })\n            }\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Away Team</label>\n          <Input\n            placeholder=\"Away Team Name\"\n            name=\"awayTeamName\"\n            value={state.awayTeamName}\n            onChange={(e) =>\n              setstate({ ...state, awayTeamName: e.target.value })\n            }\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Toss Won By</label>\n          <select\n            className=\"ui selection dropdown mr3\"\n            placeholder=\"Toss Won By\"\n            value={state.tossWonBy}\n            onChange={(e) => setstate({ ...state, tossWonBy: e.target.value })}\n          >\n            <option key=\"tossSelection\" value=\"SelectToss\">\n              Select Your Option\n            </option>\n            <option key=\"homeTeamName\" value={state.homeTeamName}>\n              {state.homeTeamName}\n            </option>\n            <option key=\"awayTeamName\" value={state.awayTeamName}>\n              {state.awayTeamName}\n            </option>\n          </select>\n        </Form.Field>\n        <Form.Field required>\n          <label>Elected To</label>\n          <select\n            className=\"ui selection dropdown mr3\"\n            placeholder=\"Elected To\"\n            value={state.electedTo}\n            onChange={(e) => updateSelection(e)}\n          >\n            <option key=\"selection\" value=\"Select\">\n              Select Your Option\n            </option>\n            <option key=\"bat\" value=\"BAT\">\n              BAT\n            </option>\n            <option key=\"bowl\" value=\"BOWL\">\n              BOWL\n            </option>\n          </select>\n        </Form.Field>\n        <Form.Field required>\n          <label>Team Batting First</label>\n          <select\n            className=\"ui selection dropdown mr3\"\n            value={state.teamBatingFirst}\n            disabled\n            onChange={(e) =>\n              setstate({ ...state, teamBatingFirst: e.target.value })\n            }\n          >\n            <option key=\"teamBattingFirst\" value=\"SelectBattingTeam\">\n              Select Batting Team\n            </option>\n            <option key=\"key01\" value={state.homeTeamName}>\n              {state.homeTeamName}\n            </option>\n            <option key=\"key02\" value={state.awayTeamName}>\n              {state.awayTeamName}\n            </option>\n          </select>\n        </Form.Field>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default MatchDetails;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.util.js",["145"],"export const addPlayerToList = (playerList, player) => {\n  return [...playerList, { ...player }];\n};\n\nexport const removePlayerFromList = (playerList, playerId) => {\n  return playerList.filter((player) => player.id !== playerId);\n};\n\nexport const removeObj = (list, objKey) => {\n  delete list[objKey];\n  return list;\n};\n\nexport const addMatchDetailsToDb = (matchDetails) => {\n  return {\n    ...matchDetails,\n    venue: matchDetails.venue,\n    homeTeamName: matchDetails.homeTeamName,\n    awayTeamName: matchDetails.awayTeamName,\n    tournametName: matchDetails.tournametName,\n    tossWonBy: matchDetails.tossWonBy,\n    electedTo: matchDetails.electedTo,\n    teamBatingFirst: matchDetails.teamBatingFirst,\n  };\n};\n\nexport const addPlayerObj = (state, player) => {\n  // console.log([...state, { ...player }]);\n};\n\nexport const updateCurrentStats = (stats, battingList, bowlingList) => {\n  return {\n    ...stats,\n    striker: battingList[stats.striker],\n    nonStriker: battingList[stats.nonStriker],\n    currentBowler: bowlingList[stats.currentBowler],\n  };\n};\n\nexport const convertArrayToObject = (array) => {\n  const initialValue = {};\n  return array.reduce((obj, item) => {\n    return {\n      ...obj,\n      [item[\"id\"]]: item,\n    };\n  }, initialValue);\n};\n\nconst updateOver = (state) => {\n  const currentInn = !state.isFirstInnCompleted ? \"inn1\" : \"inn2\";\n  const _totalBalls = state[currentInn].totalBalls + 1;\n  const _totalOvers = calcOver(_totalBalls);\n  // const _currentBowlerTotalBalls = currentBowler[\"balls\"] + 1;\n  return {\n    ...state,\n    [currentInn]: {\n      ...state[currentInn],\n      totalOvers: state[currentInn].totalOvers + _totalOvers,\n      totalBalls: state[currentInn].totalBalls + _totalBalls,\n    },\n  };\n};\n\nconst calcOver = (balls) => {\n  return Math.floor(balls / 6) + (balls % 6) / 10;\n};\n\nexport const updateRuns = (state, player, runs) => {\n  const currentInn = !state.isFirstInnCompleted ? \"inn1\" : \"inn2\";\n  const bowlerId = state.currentStats.currentBowler;\n  const bowler = state[currentInn].bowlingTeam[bowlerId];\n  const _totalBalls = state[currentInn].totalBalls + 1;\n  updateOver(state);\n\n  switch (runs) {\n    case 1:\n    case 3:\n      const { striker, nonStriker } = state.currentStats;\n      const temp = striker;\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          striker: nonStriker,\n          nonStriker: temp,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalBalls: _totalBalls,\n          totalOvers: calcOver(_totalBalls),\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          battingTeam: {\n            ...state[currentInn].battingTeam,\n            [player.id]: {\n              ...player,\n              ballsPlayed: player.ballsPlayed + 1,\n              runs: player.runs + runs,\n            },\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowlerId]: {\n              ...bowler,\n              balls: bowler.balls + 1,\n              overs: calcOver(bowler.balls + 1),\n              runsGiven: bowler.runsGiven + runs,\n            },\n          },\n        },\n      };\n    case 0:\n    case 2:\n    case 4:\n    case 6:\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalBalls: _totalBalls,\n          totalOvers: calcOver(_totalBalls),\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          battingTeam: {\n            ...state[currentInn].battingTeam,\n            [player.id]: {\n              ...player,\n              ballsPlayed: player.ballsPlayed + 1,\n              runs: player.runs + runs,\n              fours: runs === 4 ? player.fours + 1 : player.fours,\n              sixes: runs === 6 ? player.sixes + 1 : player.sixes,\n            },\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowlerId]: {\n              ...bowler,\n              balls: bowler.balls + 1,\n              overs: calcOver(bowler.balls + 1),\n              runsGiven: bowler.runsGiven + runs,\n            },\n          },\n        },\n      };\n    default:\n      break;\n  }\n};\n\nexport const updateExtras = (state, type, runs, bowler) => {\n  const currentInn = !state.isFirstInnCompleted ? \"inn1\" : \"inn2\";\n  const _totalBalls = state[currentInn].totalBalls + 1;\n  switch (type) {\n    case \"WB\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            wbs: state[currentInn].totalExtras.wbs + runs,\n            total: state[currentInn].totalExtras.total + runs,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              wbs: bowler.wbs + runs,\n              runsGiven: bowler.runsGiven + runs,\n            },\n          },\n        },\n      };\n    case \"NB\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalExtras: state[currentInn].totalExtras + runs,\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              nbs: bowler.nbs + runs,\n              runsGiven: bowler.runsGiven + runs,\n            },\n          },\n        },\n      };\n    case \"NB_PLUS\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            nbs: state[currentInn].totalExtras.nbs + runs,\n            total: state[currentInn].totalExtras.total + runs,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              nbs: bowler.nbs + runs,\n              runsGiven: bowler.runsGiven + runs,\n            },\n          },\n        },\n      };\n    case \"WB_PLUS\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            wbs: state[currentInn].totalExtras.wbs + runs,\n            total: state[currentInn].totalExtras.total + runs,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              wbs: bowler.wbs + runs,\n              runsGiven: bowler.runsGiven + runs,\n            },\n          },\n        },\n      };\n    case \"BYE_PLUS\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, runs],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalBalls: _totalBalls,\n          totalOvers: calcOver(_totalBalls),\n          totalRuns: state[currentInn].totalRuns + runs,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            byes: state[currentInn].totalExtras.byes + runs,\n            total: state[currentInn].totalExtras.total + runs,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + runs,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              balls: bowler.balls + 1,\n              overs: calcOver(bowler.balls + 1),\n            },\n          },\n        },\n      };\n    case \"BYES\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, 1],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalBalls: _totalBalls,\n          totalOvers: calcOver(_totalBalls),\n          totalRuns: state[currentInn].totalRuns + 1,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            lBye: state[currentInn].totalExtras.lBye + 1,\n            total: state[currentInn].totalExtras.total + 1,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + 1,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              balls: bowler.balls + 1,\n              overs: calcOver(bowler.balls + 1),\n            },\n          },\n        },\n      };\n    case \"LBYES\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, 1],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalBalls: _totalBalls,\n          totalOvers: calcOver(_totalBalls),\n          totalRuns: state[currentInn].totalRuns + 1,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            lBye: state[currentInn].totalExtras.lBye + 1,\n            total: state[currentInn].totalExtras.total + 1,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + 1,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              balls: bowler.balls + 1,\n              overs: calcOver(bowler.balls + 1),\n            },\n          },\n        },\n      };\n    case \"LBYES\":\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentOver: [...state.currentStats.currentOver, 1],\n        },\n        [currentInn]: {\n          ...state[currentInn],\n          totalBalls: _totalBalls,\n          totalOvers: calcOver(_totalBalls),\n          totalRuns: state[currentInn].totalRuns + 1,\n          totalExtras: {\n            ...state[currentInn].totalExtras,\n            lBye: state[currentInn].totalExtras.lBye + 1,\n            total: state[currentInn].totalExtras.total + 1,\n          },\n          currentPartnership: {\n            runs: state[currentInn].currentPartnership.runs + 1,\n            balls: state[currentInn].currentPartnership.balls + 1,\n          },\n          bowlingTeam: {\n            ...state[currentInn].bowlingTeam,\n            [bowler.id]: {\n              ...bowler,\n              balls: bowler.balls + 1,\n              overs: calcOver(bowler.balls + 1),\n            },\n          },\n        },\n      };\n    default:\n      break;\n  }\n};\n\nexport const updateWicket = (state, action) => {\n  const currentInn = !state.isFirstInnCompleted ? \"inn1\" : \"inn2\";\n  const { striker, nonStriker, currentBowler } = state.currentStats;\n  const stikerClone = state[currentInn].battingTeam[striker];\n  const nonStrikerClone = state[currentInn].battingTeam[nonStriker];\n  const bowlerId = state.currentStats.currentBowler;\n  const bowler = state[currentInn].bowlingTeam[bowlerId];\n  const _totalBalls = state[currentInn].totalBalls + 1;\n  updateOver(state);\n  if (striker === action.data.outBatsmanId) {\n    return {\n      ...state,\n      currentStats: {\n        ...state.currentStats,\n        striker: action.data.nextBatsmanId,\n        currentOver: [...state.currentStats.currentOver, \"W\"],\n      },\n      [currentInn]: {\n        ...state[currentInn],\n        totalBalls: _totalBalls,\n        totalOvers: calcOver(_totalBalls),\n        totalWickets: state[currentInn].totalWickets + 1,\n        currentPartnership: {\n          runs: 0,\n          balls: 0,\n        },\n        partnerships: {\n          ...state[currentInn].partnerships,\n          [state[currentInn].totalWickets + 1]: {\n            ...state[currentInn].currentPartnership,\n            player1: striker,\n            player2: nonStriker,\n          },\n        },\n        battingTeam: {\n          ...state[currentInn].battingTeam,\n          [striker]: {\n            ...stikerClone,\n            ballsPlayed: stikerClone.ballsPlayed + 1,\n            isOut: true,\n          },\n        },\n        bowlingTeam: {\n          ...state[currentInn].bowlingTeam,\n          [currentBowler]: {\n            ...bowler,\n            balls: bowler.balls + 1,\n            overs: calcOver(bowler.balls + 1),\n            wkts:\n              action.data.howOut === \"Run Out\" ? bowler.wkts : bowler.wkts + 1,\n          },\n        },\n      },\n    };\n  } else if (nonStriker === action.data.outBatsmanId) {\n    return {\n      ...state,\n      currentStats: {\n        ...state.currentStats,\n        nonStriker: action.data.nextBatsmanId,\n        currentOver: [...state.currentStats.currentOver, \"W\"],\n      },\n      [currentInn]: {\n        ...state[currentInn],\n        totalBalls: _totalBalls,\n        totalOvers: calcOver(_totalBalls),\n        totalWickets: state[currentInn].totalWickets + 1,\n        currentPartnership: {\n          runs: 0,\n          balls: 0,\n        },\n        partnerships: {\n          ...state[currentInn].partnerships,\n          [state[currentInn].totalWickets + 1]: {\n            ...state[currentInn].currentPartnership,\n            player1: striker,\n            player2: nonStriker,\n          },\n        },\n        battingTeam: {\n          ...state[currentInn].battingTeam,\n          [nonStriker]: {\n            ...nonStrikerClone,\n            ballsPlayed: nonStrikerClone.ballsPlayed + 1,\n            isOut: true,\n          },\n        },\n        bowlingTeam: {\n          ...state[currentInn].bowlingTeam,\n          [currentBowler]: {\n            ...bowler,\n            balls: bowler.balls + 1,\n            overs: calcOver(bowler.balls + 1),\n            wkts:\n              action.data.howOut === \"Run Out\" ? bowler.wkts : bowler.wkts + 1,\n          },\n        },\n      },\n    };\n  }\n};\n","/home/vinay/Documents/project/circkzy-scoring-app/src/data.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/tempData.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/table-grid.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/add-player-form.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/modal/selection-modal.jsx",["146"],"import React, { useState } from \"react\";\nimport { Modal, Form, Radio } from \"semantic-ui-react\";\n\nexport const SelectionModalPage = ({\n  playerList,\n  title,\n  handleEvent,\n  isOpen,\n  player,\n}) => {\n  const [open, setOpen] = React.useState({ isOpen });\n\n  return (\n    <Modal\n      size=\"mini\"\n      open={open}\n      dimmer=\"blurring\"\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Modal.Header>{title}</Modal.Header>\n      <Modal.Content>\n        <div className=\"changeBowler\">\n          {Object.entries(playerList).map(([key, value], i) => (\n            <Form.Field key={i}>\n              <Radio\n                className=\"b\"\n                key={i}\n                label={value[\"name\"]}\n                disabled={player[\"id\"] === value[\"id\"]}\n                onChange={() => handleEvent(value)}\n              />\n            </Form.Field>\n          ))}\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default SelectionModalPage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/player-list/player-list.jsx",["147"],"import React from \"react\";\nimport { Divider, List } from \"semantic-ui-react\";\n\nconst PlayerListPage = ({\n  playerList,\n  handleDelete,\n  isHomeTeam,\n  playerListClone,\n}) => {\n  return (\n    <>\n      {/* <List animated divided verticalAlign=\"middle\">\n        {playerList.map((player) => (\n          <List.Item key={player.id}>\n            <List.Content floated=\"right\">\n              <List.Icon\n                link\n                name=\"delete\"\n                size=\"small\"\n                verticalAlign=\"middle\"\n                onClick={() => handleDelete(player.id, isHomeTeam)}\n              />\n            </List.Content>\n            <List.Icon name=\"user circle\" />\n            <List.Content>\n              <List.Header>{player.playerName}</List.Header>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List> */}\n      <List animated divided verticalAlign=\"middle\">\n        {playerListClone !== null || playerListClone !== undefined\n          ? Object.keys(playerListClone).map((keyName) => (\n              <List.Item key={playerListClone[keyName][\"id\"]}>\n                <List.Content floated=\"right\">\n                  <List.Icon\n                    link\n                    name=\"delete\"\n                    size=\"small\"\n                    verticalAlign=\"middle\"\n                    onClick={() => handleDelete(keyName, isHomeTeam)}\n                  />\n                </List.Content>\n                <List.Icon name=\"user circle\" />\n                <List.Content>\n                  <List.Header>\n                    {playerListClone[keyName][\"playerName\"]}\n                  </List.Header>\n                </List.Content>\n              </List.Item>\n            ))\n          : \"\"}\n      </List>\n    </>\n  );\n};\n\nexport default PlayerListPage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/initial-player-details/initial-player-details.component.jsx",["148"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport { SET_INITIAL_STATS } from '../../providers/match/match.actions';\n\nimport { MatchContext } from '../../providers/match/match.provider';\n\nconst InitialPlayerDetails = () => {\n  let history = useHistory();\n  const location = useLocation();\n  const { addCurrentStatsDetails, rootState, rootDispatch } = useContext(\n    MatchContext\n  );\n  const battingTeam = location.state.isFirstInn\n    ? rootState.inn1.battingTeam\n    : rootState.inn2.battingTeam;\n  const bowlingTeam = location.state.isFirstInn\n    ? rootState.inn1.bowlingTeam\n    : rootState.inn2.bowlingTeam;\n  // const { battingTeam, bowlingTeam } = rootState.inn1;\n  const [currentStats, setCurrentStats] = useState({\n    striker: '',\n    nonStriker: '',\n    currentBowler: '',\n    currentOver: [],\n  });\n\n  const _updateCurrentStats = () => {\n    rootDispatch({ type: SET_INITIAL_STATS, currentStats: currentStats });\n    addCurrentStatsDetails(currentStats);\n    setCurrentStats({\n      striker: '',\n      nonStriker: '',\n      currentBowler: '',\n    });\n    history.push({\n      pathname: '/scoreboard',\n      state: { isFirstInn: location.state.isFirstInn },\n    });\n  };\n  return (\n    <>\n      <div className=\"pa3\">\n        <label className=\"f6 b db mb2 pr2\">Select Striker</label>\n        <select\n          className=\"ui selection dropdown mr3\"\n          value={currentStats.striker}\n          onChange={(e) =>\n            setCurrentStats({ ...currentStats, striker: e.target.value })\n          }\n        >\n          <option key=\"striker\" value=\"select striker\">\n            Select Striker\n          </option>\n          {battingTeam !== null || battingTeam !== undefined\n            ? Object.keys(battingTeam).map((keyName) => (\n                <option key={keyName} value={battingTeam[keyName]['id']}>\n                  {battingTeam[keyName]['playerName']}\n                </option>\n              ))\n            : ''}\n        </select>\n        <label className=\"f6 b db mb2 pr2\">Select Non-Striker</label>\n        <select\n          className=\"ui selection dropdown mr3\"\n          value={currentStats.nonStriker}\n          onChange={(e) =>\n            setCurrentStats({ ...currentStats, nonStriker: e.target.value })\n          }\n        >\n          <option key=\"nonStriker\" value=\"select non striker\">\n            Select Non Striker\n          </option>\n          {battingTeam !== null || battingTeam !== undefined\n            ? Object.keys(battingTeam).map((keyName) => (\n                <option key={keyName} value={battingTeam[keyName]['id']}>\n                  {battingTeam[keyName]['playerName']}\n                </option>\n              ))\n            : ''}\n        </select>\n        <label className=\"f6 b db mb2 pr2\">Select Opening Bowler</label>\n        <select\n          className=\"ui selection dropdown mr3\"\n          value={currentStats.currentBowler}\n          onChange={(e) =>\n            setCurrentStats({ ...currentStats, currentBowler: e.target.value })\n          }\n        >\n          <option key=\"currentBowler\" value=\"select bowler\">\n            Select Bowler\n          </option>\n          {bowlingTeam !== null || bowlingTeam !== undefined\n            ? Object.keys(bowlingTeam).map((keyName) => (\n                <option key={keyName} value={bowlingTeam[keyName]['id']}>\n                  {bowlingTeam[keyName]['playerName']}\n                </option>\n              ))\n            : ''}\n        </select>\n      </div>\n      <div className=\"flex justify-center\">\n        <Button type=\"button\" onClick={_updateCurrentStats}>\n          Confirm Teams\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default InitialPlayerDetails;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score-book.component.jsx",["149","150","151","152","153","154","155","156","157","158"],"import React, { useContext, useState, useReducer, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  Label,\n  Radio,\n  Form,\n  Icon,\n  Dropdown,\n} from \"semantic-ui-react\";\n\nimport { MatchContext } from \"../../providers/match/match.provider\";\nimport {\n  CHANGE_BOWLER,\n  CHANGE_STRIKER,\n} from \"../../providers/match/match.actions\";\nimport CurrentScoreboard from \"../../pages/currentScoreboard\";\nimport UpdateScoreComponent from \"./update-score.component\";\n\nconst exampleReducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_MODAL\":\n      return { ...state, open: true, dimmer: action.dimmer };\n    case \"CLOSE_MODAL\":\n      return { open: false };\n    case \"OPEN_BATSMAN_MODAL\":\n      return { ...state, openSecond: true };\n    case \"SAVE_BATSMAN\":\n      return { ...state, outBatsman: action.playerId };\n    default:\n      throw new Error();\n  }\n};\n\nconst ScoreBoardPage = () => {\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    open: false,\n    dimmer: undefined,\n  });\n\n  const { open, dimmer } = state;\n\n  const { rootState, rootDispatch } = useContext(MatchContext);\n  const { battingTeam, bowlingTeam, totalOvers } = rootState.inn1;\n  const { striker, nonStriker, currentBowler } = rootState.currentStats;\n\n  const checkAndChange = () => {\n    if (totalOvers % 1 === 0 && totalOvers !== 0) {\n      dispatch({ type: \"OPEN_MODAL\" });\n      rootDispatch({ type: CHANGE_STRIKER });\n    }\n  };\n\n  const selectBowler = (bowler) => {\n    console.log(\"Select bowler logic goes here!\", bowler);\n    rootDispatch({ type: CHANGE_BOWLER, bowler: bowler.id });\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  useEffect(() => checkAndChange(), [rootState.inn1.totalOvers]);\n\n  return (\n    <>\n      <CurrentScoreboard />\n      <UpdateScoreComponent />\n      <Modal\n        dimmer={dimmer}\n        open={open}\n        onClose={() => dispatch({ type: \"CLOSE_MODAL\" })}\n      >\n        <Modal.Header>Change Bowler</Modal.Header>\n        <Modal.Content>\n          <div>\n            {Object.entries(bowlingTeam).map(([key, value], i) => (\n              <Form.Field key={i}>\n                <Radio\n                  className=\"b\"\n                  key={i}\n                  label={value[\"playerName\"]}\n                  disabled={currentBowler === value[\"id\"]}\n                  onChange={() => selectBowler(value)}\n                />\n              </Form.Field>\n            ))}\n          </div>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nexport default ScoreBoardPage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score.reducer.js",[],["159","160"],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/match-details/test.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.reducer.js",["161"],"import {\n  ADD_MATCH_DETAILS,\n  ADD_HOME_TEAM_PLAYER,\n  ADD_AWAY_TEAM_PLAYER,\n  REMOVE_HOME_PLAYER,\n  REMOVE_AWAY_PLAYER,\n  SET_BATTING_TEAM,\n  SET_INITIAL_STATS,\n  SET_DOT_BALL,\n  CHANGE_STRIKER,\n  SET_ONE_RUN,\n  SET_TWO_RUNS,\n  SET_THREE_RUNS,\n  SET_FOUR_RUNS,\n  SET_SIX_RUNS,\n  SET_WIDE_BALL,\n  SET_NO_BALL,\n  SET_BYES,\n  SET_LEG_BYES,\n  CHANGE_BOWLER,\n  SET_WIDE_PLUS_RUNS,\n  SET_NO_PLUS_RUNS,\n  SET_BYE_PLUS_RUNS,\n  SET_LBYE_PLUS_RUNS,\n  WICKET_FALLEN,\n  NEW_BATSMAN,\n  END_OF_INN1,\n} from \"./match.actions\";\nimport {\n  addMatchDetailsToDb,\n  removeObj,\n  updateExtras,\n  updateRuns,\n  updateWicket,\n} from \"./match.util\";\nimport { testInitialState } from \"./test-data\";\n\nexport const initialState = {\n  count: 0,\n  isFirstInnCompleted: false,\n  target: 0,\n  playerList: {\n    homeTeam: [],\n    awayTeam: [],\n    homeTeamClone: {},\n    awayTeamClone: {},\n  },\n  matchDetails: {\n    homeTeamName: \"\",\n    awayTeamName: \"\",\n    venue: \"\",\n    tournametName: \"\",\n    tossWonBy: \"\",\n    electedTo: \"\",\n    teamBatingFirst: \"\",\n    isHomTeamBattingFirst: false,\n  },\n  currentStats: {\n    striker: \"\",\n    nonStriker: \"\",\n    currentBowler: \"\",\n    currentOver: [],\n  },\n  inn1: {\n    battingTeam: {},\n    bowlingTeam: {},\n    currentPartnership: {\n      runs: 0,\n      balls: 0,\n    },\n    partnerships: {},\n    totalRuns: 0,\n    totalWickets: 0,\n    totalExtras: {\n      wbs: 0,\n      nbs: 0,\n      byes: 0,\n      lBye: 0,\n      total: 0,\n    },\n    totalOvers: 0,\n    totalBalls: 0,\n  },\n  inn2: {\n    battingTeam: {},\n    bowlingTeam: {},\n    currentPartnership: {\n      runs: 0,\n      balls: 0,\n    },\n    partnerships: {},\n    totalRuns: 0,\n    totalWickets: 0,\n    totalExtras: {\n      wbs: 0,\n      nbs: 0,\n      byes: 0,\n      lBye: 0,\n      total: 0,\n    },\n    totalOvers: 0,\n    totalBalls: 0,\n  },\n};\n\n// export const initialState = testInitialState;\n\nexport const matchReducer = (state, action) => {\n  const { currentBowler } = state.currentStats;\n  const { bowlingTeam } = !state.isFirstInnCompleted ? state.inn1 : state.inn2;\n  const bowler = bowlingTeam[currentBowler];\n  const { striker, nonStriker } = state.currentStats;\n  switch (action.type) {\n    case \"increment\":\n      return { ...state, count: state.count + 1 };\n    case \"decrement\":\n      return { ...state, count: state.count - 1 };\n    case ADD_MATCH_DETAILS:\n      return {\n        ...state,\n        matchDetails: addMatchDetailsToDb(action.matchDetails),\n      };\n    case ADD_HOME_TEAM_PLAYER:\n      return {\n        ...state,\n        playerList: {\n          ...state.playerList,\n          homeTeamClone: {\n            ...state.playerList.homeTeamClone,\n            [action.player.id]: {\n              ...action.player,\n              runs: 0,\n              ballsPlayed: 0,\n              fours: 0,\n              sixes: 0,\n              overs: 0,\n              runsGiven: 0,\n              balls: 0,\n              maidens: 0,\n              wkts: 0,\n              wbs: 0,\n              nbs: 0,\n              isOut: false,\n            },\n          },\n        },\n      };\n    case ADD_AWAY_TEAM_PLAYER:\n      return {\n        ...state,\n        playerList: {\n          ...state.playerList,\n          awayTeamClone: {\n            ...state.playerList.awayTeamClone,\n            [action.player.id]: {\n              ...action.player,\n              runs: 0,\n              ballsPlayed: 0,\n              fours: 0,\n              sixes: 0,\n              overs: 0,\n              runsGiven: 0,\n              balls: 0,\n              maidens: 0,\n              wkts: 0,\n              wbs: 0,\n              nbs: 0,\n              isOut: false,\n            },\n          },\n        },\n      };\n    case REMOVE_HOME_PLAYER:\n      return {\n        ...state,\n        playerList: {\n          ...state.playerList,\n          homeTeamClone: removeObj(\n            state.playerList.homeTeamClone,\n            action.playerId\n          ),\n        },\n      };\n    case REMOVE_AWAY_PLAYER:\n      return {\n        ...state,\n        playerList: {\n          ...state.playerList,\n          awayTeamClone: removeObj(\n            state.playerList.awayTeamClone,\n            action.playerId\n          ),\n        },\n      };\n    case SET_BATTING_TEAM:\n      return {\n        ...state,\n        inn1: {\n          ...state.inn1,\n          battingTeam: state.matchDetails.isHomTeamBattingFirst\n            ? state.playerList.homeTeamClone\n            : state.playerList.awayTeamClone,\n          bowlingTeam: state.matchDetails.isHomTeamBattingFirst\n            ? state.playerList.awayTeamClone\n            : state.playerList.homeTeamClone,\n        },\n        inn2: {\n          ...state.inn2,\n          battingTeam: state.matchDetails.isHomTeamBattingFirst\n            ? state.playerList.awayTeamClone\n            : state.playerList.homeTeamClone,\n          bowlingTeam: state.matchDetails.isHomTeamBattingFirst\n            ? state.playerList.homeTeamClone\n            : state.playerList.awayTeamClone,\n        },\n      };\n    case SET_INITIAL_STATS:\n      return {\n        ...state,\n        currentStats: action.currentStats,\n      };\n    case CHANGE_STRIKER:\n      const temp = striker;\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          striker: nonStriker,\n          nonStriker: temp,\n        },\n      };\n    case CHANGE_BOWLER:\n      // const { currentBowler } = state.currentStats;\n      return {\n        ...state,\n        currentStats: {\n          ...state.currentStats,\n          currentBowler: action.bowler,\n        },\n      };\n    case NEW_BATSMAN:\n      return updateWicket(state, action);\n    case WICKET_FALLEN:\n      if (!state.isFirstInnCompleted) {\n        return {\n          ...state,\n          inn1: {\n            ...state.inn1,\n            totalWickets: state.inn1.totalWickets + 1,\n            bowlingTeam: {\n              ...state.inn1.bowlingTeam,\n              [currentBowler]: {\n                ...bowler,\n                wkts: bowler.wkts + 1,\n              },\n            },\n          },\n        };\n      } else {\n        return {\n          ...state,\n          inn2: {\n            ...state.inn2,\n            totalWickets: state.inn1.totalWickets + 1,\n            bowlingTeam: {\n              ...state.inn1.bowlingTeam,\n              [currentBowler]: {\n                ...bowler,\n                wkts: bowler.wkts + 1,\n              },\n            },\n          },\n        };\n      }\n    case END_OF_INN1:\n      return {\n        ...state,\n        target: state.inn1.totalRuns,\n        isFirstInnCompleted: action.isFirstInnCompleted,\n      };\n    case SET_DOT_BALL:\n      return updateRuns(state, action.player, 0);\n    case SET_ONE_RUN:\n      return updateRuns(state, action.player, 1);\n    case SET_TWO_RUNS:\n      return updateRuns(state, action.player, 2);\n    case SET_THREE_RUNS:\n      return updateRuns(state, action.player, 3);\n    case SET_FOUR_RUNS:\n      return updateRuns(state, action.player, 4);\n    case SET_SIX_RUNS:\n      return updateRuns(state, action.player, 6);\n    case SET_WIDE_BALL:\n      return updateExtras(state, \"WB\", 1, action.bowler);\n    case SET_NO_BALL:\n      return updateExtras(state, \"NB\", 1, action.bowler);\n    case SET_BYES:\n      return updateExtras(state, \"BYES\", 1, action.bowler);\n    case SET_LEG_BYES:\n      return updateExtras(state, \"LBYES\", 1, action.bowler);\n    case SET_WIDE_PLUS_RUNS:\n      return updateExtras(state, \"WB_PLUS\", action.extras, bowler);\n    case SET_NO_PLUS_RUNS:\n      return updateExtras(state, \"NB_PLUS\", action.extras, bowler);\n    case SET_BYE_PLUS_RUNS:\n      return updateExtras(state, \"BYE_PLUS\", action.extras, bowler);\n    case SET_LBYE_PLUS_RUNS:\n      return updateExtras(state, \"LBYE_PLUS\", action.extras, bowler);\n    default:\n      throw new Error();\n  }\n};\n","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.actions.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/currentScoreboard.jsx",["162"],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/update-score.component.jsx",["163","164","165","166","167","168"],"import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  Label,\n  Radio,\n  Form,\n  Icon,\n  Dropdown,\n  Select,\n} from \"semantic-ui-react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { MatchContext } from \"../../providers/match/match.provider\";\nimport {\n  CHANGE_BOWLER,\n  CHANGE_STRIKER,\n  SET_BYES,\n  SET_BYE_PLUS_RUNS,\n  SET_DOT_BALL,\n  SET_FOUR_RUNS,\n  SET_LBYE_PLUS_RUNS,\n  SET_LEG_BYES,\n  SET_NO_BALL,\n  SET_ONE_RUN,\n  SET_SIX_RUNS,\n  SET_THREE_RUNS,\n  SET_TWO_RUNS,\n  SET_WIDE_BALL,\n  SET_WIDE_PLUS_RUNS,\n  SET_NO_PLUS_RUNS,\n  WICKET_FALLEN,\n  NEW_BATSMAN,\n  END_OF_INN1,\n} from \"../../providers/match/match.actions\";\n\nconst ScoreReducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_MODAL\":\n      return { ...state, open: true, dimmer: action.dimmer };\n    case \"CLOSE_MODAL\":\n      return { open: false, openSecond: false };\n    case \"OPEN_BATSMAN_MODAL\":\n      return { ...state, openSecond: true };\n    case \"OUT_BATSMAN\":\n      return { ...state, outBatsman: action.playerId };\n    case \"SAVE_BATSMAN\":\n      return { ...state, newBatsman: action.playerId };\n    default:\n      throw new Error();\n  }\n};\n\nconst UpdateScoreComponent = ({ isFirstInn }) => {\n  let history = useHistory();\n  const { rootState, rootDispatch } = useContext(MatchContext);\n  const battingTeam = isFirstInn\n    ? rootState.inn1.battingTeam\n    : rootState.inn2.battingTeam;\n  const bowlingTeam = isFirstInn\n    ? rootState.inn1.bowlingTeam\n    : rootState.inn2.bowlingTeam;\n  // const { battingTeam, bowlingTeam, totalOvers } = rootState.inn1;\n  const { striker, nonStriker, currentBowler } = rootState.currentStats;\n  const [state, dispatch] = React.useReducer(ScoreReducer, {\n    open: false,\n    dimmer: undefined,\n    openSecond: false,\n    outBatsman: null,\n  });\n  const [formData, setFormData] = useState({\n    outBatsmanId: null,\n    howOut: null,\n    nextBatsmanId: null,\n  });\n  const options = [\n    { key: 2, text: \"Total 2\", value: 2 },\n    { key: 3, text: \"Total 3\", value: 3 },\n    { key: 4, text: \"Total 4\", value: 4 },\n    { key: 5, text: \"Total 5\", value: 5 },\n    { key: 6, text: \"Total 6\", value: 6 },\n    { key: 7, text: \"Total 7\", value: 7 },\n  ];\n\n  const wkt_options = [\n    { key: 8, text: \"LBW\", value: \"LBW\" },\n    { key: 4, text: \"Bowled\", value: \"Bowled\" },\n    { key: 1, text: \"Caught Behind\", value: \"Caught Behind\" },\n    { key: 2, text: \"Caught and Bowled\", value: \"Caught and Bowled\" },\n    { key: 3, text: \"Caught\", value: \"Caught\" },\n    { key: 5, text: \"Run Out\", value: \"Run Out\" },\n    { key: 6, text: \"Hit Wicket\", value: \"Hit Wicket\" },\n    { key: 7, text: \"Time Out\", value: \"Time Out\" },\n  ];\n\n  const current_batsmen = [\n    { key: 1, text: battingTeam[striker][\"playerName\"], value: striker },\n    { key: 2, text: battingTeam[nonStriker][\"playerName\"], value: nonStriker },\n  ];\n\n  const { open, dimmer, openSecond, outBatsman } = state;\n\n  const changeStriker = () => {\n    rootDispatch({ type: CHANGE_STRIKER });\n  };\n\n  const updateRuns = (type) => {\n    rootDispatch({ type, player: battingTeam[striker] });\n  };\n\n  const widePlusRuns = (event, { value }) => {\n    rootDispatch({ type: SET_WIDE_PLUS_RUNS, extras: value });\n  };\n  const noBallPlusRuns = (event, { value }) => {\n    rootDispatch({ type: SET_NO_PLUS_RUNS, extras: value });\n  };\n  const byesPlusRuns = (event, { value }) => {\n    rootDispatch({ type: SET_BYE_PLUS_RUNS, extras: value });\n  };\n\n  const lByesPlusRuns = (event, { value }) => {\n    rootDispatch({ type: SET_LBYE_PLUS_RUNS, extras: value });\n  };\n\n  const selectBowler = (bowler) => {\n    rootDispatch({ type: CHANGE_BOWLER, bowler: bowler.id });\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const wicketFallen = (batsManId, isStrikerOut) => {\n    rootDispatch({ type: WICKET_FALLEN });\n  };\n\n  const convertObjToArray = (obj) => {\n    let toArray = Object.values(obj);\n    toArray = toArray.filter(\n      (pl) => striker !== pl.id && nonStriker !== pl.id && !pl.isOut\n    );\n    toArray = [...toArray].map((player, i) => {\n      return { key: i, text: player.playerName, value: player.id };\n    });\n\n    return toArray;\n  };\n\n  const setOutBatsman = (event, { value }) => {\n    setFormData({ ...formData, outBatsmanId: value });\n  };\n  const setHowOut = (event, { value }) => {\n    setFormData({ ...formData, howOut: value });\n  };\n  const setNextBatsman = (event, { value }) => {\n    setFormData({ ...formData, nextBatsmanId: value });\n  };\n  const handleSubmit = () => {\n    console.log(formData);\n    rootDispatch({ type: NEW_BATSMAN, data: formData });\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const endOfInn = () => {\n    rootDispatch({ type: END_OF_INN1, isFirstInnCompleted: true });\n    history.push({\n      pathname: \"/currentStats\",\n      state: { isFirstInn: false },\n    });\n  };\n  return (\n    <>\n      <div className=\"flex flex-column items-center justify-center tc\">\n        <div className=\"ma3\">\n          <Button.Group size=\"small\">\n            <Button size=\"huge\" onClick={() => updateRuns(SET_DOT_BALL)}>\n              0\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_ONE_RUN,\n                  player: battingTeam[striker],\n                })\n              }\n            >\n              1\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_TWO_RUNS,\n                  player: battingTeam[striker],\n                })\n              }\n            >\n              2\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_THREE_RUNS,\n                  player: battingTeam[striker],\n                })\n              }\n            >\n              3\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_FOUR_RUNS,\n                  player: battingTeam[striker],\n                })\n              }\n            >\n              4\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_SIX_RUNS,\n                  player: battingTeam[striker],\n                })\n              }\n            >\n              6\n            </Button>\n          </Button.Group>\n        </div>\n        <div className=\"mh3 w-100\">\n          <Button.Group size=\"small\">\n            <Button\n              size=\"huge\"\n              onClick={() => dispatch({ type: \"OPEN_BATSMAN_MODAL\" })}\n            >\n              W\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_WIDE_BALL,\n                  bowler: bowlingTeam[currentBowler],\n                })\n              }\n            >\n              WB\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_NO_BALL,\n                  bowler: bowlingTeam[currentBowler],\n                })\n              }\n            >\n              NB\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_BYES,\n                  bowler: bowlingTeam[currentBowler],\n                })\n              }\n            >\n              B\n            </Button>\n            <Button\n              size=\"huge\"\n              onClick={() =>\n                rootDispatch({\n                  type: SET_LEG_BYES,\n                  bowler: bowlingTeam[currentBowler],\n                })\n              }\n            >\n              LB\n            </Button>\n            <Button icon size=\"huge\" onClick={changeStriker}>\n              <Icon name=\"refresh\" />\n            </Button>\n          </Button.Group>\n        </div>\n        <div className=\"mh3 w-100\">\n          <Dropdown\n            placeholder=\"WB+\"\n            compact\n            selection\n            options={options}\n            value=\"\"\n            onChange={widePlusRuns}\n            className=\"ma2\"\n          />\n          <Dropdown\n            placeholder=\"NB+\"\n            compact\n            selection\n            options={options}\n            value=\"\"\n            onChange={noBallPlusRuns}\n            className=\"ma2\"\n          />\n          <Dropdown\n            placeholder=\"B+\"\n            compact\n            selection\n            options={options}\n            value=\"\"\n            onChange={byesPlusRuns}\n            className=\"ma2\"\n          />\n          <Dropdown\n            placeholder=\"LB+\"\n            compact\n            selection\n            options={options}\n            value=\"\"\n            onChange={lByesPlusRuns}\n            className=\"ma2\"\n          />\n        </div>\n        <Button size=\"big\" disabled={!isFirstInn} onClick={endOfInn}>\n          End of Inn\n        </Button>\n      </div>\n      {/* Select Next Batsman Modal */}\n      <Modal dimmer={dimmer} open={openSecond}>\n        <Modal.Header>Select Next Batsman</Modal.Header>\n        <Modal.Content>\n          <div>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Select}\n                  options={current_batsmen}\n                  label={{\n                    children: \"Select out batsman\",\n                    htmlFor: \"form-select-control-gender\",\n                  }}\n                  placeholder=\"Select out batsman\"\n                  onChange={setOutBatsman}\n                />\n                <Form.Field\n                  control={Select}\n                  options={wkt_options}\n                  label={{\n                    children: \"How Out?\",\n                    htmlFor: \"form-select-control-gender\",\n                  }}\n                  placeholder=\"How Out?\"\n                  onChange={setHowOut}\n                />\n                <Form.Field\n                  control={Select}\n                  options={convertObjToArray(battingTeam)}\n                  label={{\n                    children: \"Select Next Batsman?\",\n                    htmlFor: \"form-select-control-gender\",\n                  }}\n                  placeholder=\"How Out?\"\n                  onChange={setNextBatsman}\n                />\n              </Form.Group>\n              <Button type=\"submit\"> Confirm Details</Button>\n            </Form>\n          </div>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateScoreComponent;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/test-data.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":3,"column":40,"nodeType":"175","messageId":"176","endLine":3,"endColumn":46},{"ruleId":"173","severity":1,"message":"177","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"173","severity":1,"message":"178","line":4,"column":3,"nodeType":"175","messageId":"176","endLine":4,"endColumn":18},{"ruleId":"173","severity":1,"message":"179","line":5,"column":3,"nodeType":"175","messageId":"176","endLine":5,"endColumn":23},{"ruleId":"173","severity":1,"message":"180","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":22},{"ruleId":"173","severity":1,"message":"181","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":15},{"ruleId":"173","severity":1,"message":"182","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":12},{"ruleId":"173","severity":1,"message":"183","line":53,"column":22,"nodeType":"175","messageId":"176","endLine":53,"endColumn":35},{"ruleId":"173","severity":1,"message":"184","line":2,"column":25,"nodeType":"175","messageId":"176","endLine":2,"endColumn":30},{"ruleId":"173","severity":1,"message":"185","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":17},{"ruleId":"173","severity":1,"message":"186","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":26},{"ruleId":"173","severity":1,"message":"187","line":21,"column":10,"nodeType":"175","messageId":"176","endLine":21,"endColumn":19},{"ruleId":"173","severity":1,"message":"188","line":21,"column":21,"nodeType":"175","messageId":"176","endLine":21,"endColumn":33},{"ruleId":"173","severity":1,"message":"189","line":31,"column":27,"nodeType":"175","messageId":"176","endLine":31,"endColumn":45},{"ruleId":"173","severity":1,"message":"190","line":67,"column":26,"nodeType":"175","messageId":"176","endLine":67,"endColumn":43},{"ruleId":"173","severity":1,"message":"191","line":137,"column":9,"nodeType":"175","messageId":"176","endLine":137,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":251,"column":6,"nodeType":"194","endLine":251,"endColumn":20,"suggestions":"195"},{"ruleId":"173","severity":1,"message":"196","line":253,"column":9,"nodeType":"175","messageId":"176","endLine":253,"endColumn":24},{"ruleId":"173","severity":1,"message":"197","line":254,"column":11,"nodeType":"175","messageId":"176","endLine":254,"endColumn":18},{"ruleId":"173","severity":1,"message":"198","line":263,"column":11,"nodeType":"175","messageId":"176","endLine":263,"endColumn":19},{"ruleId":"173","severity":1,"message":"199","line":287,"column":11,"nodeType":"175","messageId":"176","endLine":287,"endColumn":17},{"ruleId":"173","severity":1,"message":"200","line":5,"column":18,"nodeType":"175","messageId":"176","endLine":5,"endColumn":23},{"ruleId":"173","severity":1,"message":"201","line":5,"column":25,"nodeType":"175","messageId":"176","endLine":5,"endColumn":29},{"ruleId":"173","severity":1,"message":"202","line":35,"column":33,"nodeType":"175","messageId":"176","endLine":35,"endColumn":57},{"ruleId":"173","severity":1,"message":"203","line":66,"column":9,"nodeType":"175","messageId":"176","endLine":66,"endColumn":17},{"ruleId":"173","severity":1,"message":"204","line":8,"column":11,"nodeType":"175","messageId":"176","endLine":8,"endColumn":26},{"ruleId":"173","severity":1,"message":"205","line":8,"column":28,"nodeType":"175","messageId":"176","endLine":8,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":371,"column":5,"nodeType":"208","messageId":"209","endLine":401,"endColumn":9},{"ruleId":"173","severity":1,"message":"210","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"211","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"212","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":48},{"ruleId":"173","severity":1,"message":"210","line":1,"column":29,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"213","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":49},{"ruleId":"173","severity":1,"message":"214","line":3,"column":3,"nodeType":"175","messageId":"176","endLine":3,"endColumn":9},{"ruleId":"173","severity":1,"message":"184","line":5,"column":3,"nodeType":"175","messageId":"176","endLine":5,"endColumn":8},{"ruleId":"173","severity":1,"message":"215","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":7},{"ruleId":"173","severity":1,"message":"216","line":9,"column":3,"nodeType":"175","messageId":"176","endLine":9,"endColumn":11},{"ruleId":"173","severity":1,"message":"217","line":44,"column":11,"nodeType":"175","messageId":"176","endLine":44,"endColumn":22},{"ruleId":"173","severity":1,"message":"218","line":45,"column":11,"nodeType":"175","messageId":"176","endLine":45,"endColumn":18},{"ruleId":"173","severity":1,"message":"219","line":45,"column":20,"nodeType":"175","messageId":"176","endLine":45,"endColumn":30},{"ruleId":"192","severity":1,"message":"220","line":60,"column":37,"nodeType":"194","endLine":60,"endColumn":64,"suggestions":"221"},{"ruleId":"169","replacedBy":"222"},{"ruleId":"171","replacedBy":"223"},{"ruleId":"173","severity":1,"message":"224","line":36,"column":10,"nodeType":"175","messageId":"176","endLine":36,"endColumn":26},{"ruleId":"173","severity":1,"message":"225","line":26,"column":5,"nodeType":"175","messageId":"176","endLine":26,"endColumn":18},{"ruleId":"173","severity":1,"message":"184","line":5,"column":3,"nodeType":"175","messageId":"176","endLine":5,"endColumn":8},{"ruleId":"173","severity":1,"message":"226","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":8},{"ruleId":"173","severity":1,"message":"227","line":102,"column":11,"nodeType":"175","messageId":"176","endLine":102,"endColumn":15},{"ruleId":"173","severity":1,"message":"228","line":102,"column":37,"nodeType":"175","messageId":"176","endLine":102,"endColumn":47},{"ruleId":"173","severity":1,"message":"229","line":126,"column":9,"nodeType":"175","messageId":"176","endLine":126,"endColumn":21},{"ruleId":"173","severity":1,"message":"230","line":131,"column":9,"nodeType":"175","messageId":"176","endLine":131,"endColumn":21},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'HomePage' is defined but never used.","'addPlayerToList' is defined but never used.","'removePlayerFromList' is defined but never used.","'addMatchDetailsToDb' is defined but never used.","'addPlayerObj' is defined but never used.","'removeObj' is defined but never used.","'setPlayerList' is assigned a value but never used.","'Label' is defined but never used.","'matchData' is defined but never used.","'SelectionModalPage' is defined but never used.","'playerDoc' is assigned a value but never used.","'setPlayerDoc' is assigned a value but never used.","'setTempBatsmanList' is assigned a value but never used.","'setBatsmenDetails' is assigned a value but never used.","'updateBatsMan' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'isWicketFallen' and 'openModal'. Either include them or remove the dependency array.","ArrayExpression",["233"],"'tempSetDemoData' is assigned a value but never used.","'batData' is assigned a value but never used.","'bowlData' is assigned a value but never used.","'docRef' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'setIsPlayerListFinalized' is assigned a value but never used.","'updateDb' is assigned a value but never used.","'addMatchDetails' is assigned a value but never used.","'matchDetails' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'useState' is defined but never used.","'Divider' is defined but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'battingTeam' is assigned a value but never used.","'striker' is assigned a value but never used.","'nonStriker' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkAndChange'. Either include it or remove the dependency array.",["234"],["231"],["232"],"'testInitialState' is defined but never used.","'tournametName' is assigned a value but never used.","'Radio' is defined but never used.","'open' is assigned a value but never used.","'outBatsman' is assigned a value but never used.","'selectBowler' is assigned a value but never used.","'wicketFallen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [isWicketFallen, openModal, totalWickets]",{"range":"239","text":"240"},"Update the dependencies array to be: [checkAndChange, rootState.inn1.totalOvers]",{"range":"241","text":"242"},[6599,6613],"[isWicketFallen, openModal, totalWickets]",[1677,1704],"[checkAndChange, rootState.inn1.totalOvers]"]