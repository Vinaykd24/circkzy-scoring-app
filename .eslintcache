[{"/home/vinay/Documents/project/circkzy-scoring-app/src/index.js":"1","/home/vinay/Documents/project/circkzy-scoring-app/src/App.js":"2","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.provider.jsx":"3","/home/vinay/Documents/project/circkzy-scoring-app/src/firebase/config.js":"4","/home/vinay/Documents/project/circkzy-scoring-app/src/components/homepage.component.jsx":"5","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/Signup.component.jsx":"6","/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score.component.jsx":"7","/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/addPlayer.component.jsx":"8","/home/vinay/Documents/project/circkzy-scoring-app/src/components/match-details/match-details.component.jsx":"9","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.util.js":"10","/home/vinay/Documents/project/circkzy-scoring-app/src/data.js":"11","/home/vinay/Documents/project/circkzy-scoring-app/src/tempData.js":"12","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/table-grid.jsx":"13","/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/add-player-form.component.jsx":"14","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/modal/selection-modal.jsx":"15","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/player-list/player-list.jsx":"16","/home/vinay/Documents/project/circkzy-scoring-app/src/components/initial-player-details/initial-player-details.component.jsx":"17"},{"size":413,"mtime":1611587663320,"results":"18","hashOfConfig":"19"},{"size":1256,"mtime":1611612774551,"results":"20","hashOfConfig":"19"},{"size":2162,"mtime":1611685213792,"results":"21","hashOfConfig":"19"},{"size":489,"mtime":1611587663320,"results":"22","hashOfConfig":"19"},{"size":213,"mtime":1611587663320,"results":"23","hashOfConfig":"19"},{"size":1386,"mtime":1611587663320,"results":"24","hashOfConfig":"19"},{"size":11873,"mtime":1611587663320,"results":"25","hashOfConfig":"19"},{"size":4142,"mtime":1611680297240,"results":"26","hashOfConfig":"19"},{"size":4058,"mtime":1611613141712,"results":"27","hashOfConfig":"19"},{"size":791,"mtime":1611680432638,"results":"28","hashOfConfig":"19"},{"size":469,"mtime":1611587663320,"results":"29","hashOfConfig":"19"},{"size":4088,"mtime":1611587663320,"results":"30","hashOfConfig":"19"},{"size":2022,"mtime":1611587663320,"results":"31","hashOfConfig":"19"},{"size":771,"mtime":1611587663320,"results":"32","hashOfConfig":"19"},{"size":1514,"mtime":1611587663320,"results":"33","hashOfConfig":"19"},{"size":1786,"mtime":1611678969740,"results":"34","hashOfConfig":"19"},{"size":2281,"mtime":1611609028667,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1296yd9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"/home/vinay/Documents/project/circkzy-scoring-app/src/index.js",[],["77","78"],"/home/vinay/Documents/project/circkzy-scoring-app/src/App.js",["79","80"],"import \"./App.css\";\nimport \"./firebase/config\";\nimport { Route, Switch, BrowserRouter, Router } from \"react-router-dom\";\n\nimport HomePage from \"./components/homepage.component\";\nimport Signup from \"./pages/Signup.component\";\nimport ScorePage from \"./components/score/score.component\";\nimport AddPlayerPage from \"./components/add-player/addPlayer.component\";\nimport MatchDetails from \"./components/match-details/match-details.component\";\nimport InitialPlayerDetails from \"./components/initial-player-details/initial-player-details.component\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/matchDetails\" component={MatchDetails} />\n        <Route path=\"/score\" component={ScorePage} />\n        <Route path=\"/addPlayers\" component={AddPlayerPage} />\n        <Route path=\"/currentStats\" component={InitialPlayerDetails} />\n        {/* <Route\n          path=\"/addPlayers\"\n          component={() => <AddPlayerPage isHomeTeam=\"true\" />}\n        /> */}\n        <Route\n          path=\"/score\"\n          component={() => <ScorePage awayTeam=\"Infosys\" homeTeam=\"TCS\" />}\n        />\n      </Switch>\n      {/* <HomePage /> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.provider.jsx",["81"],"/home/vinay/Documents/project/circkzy-scoring-app/src/firebase/config.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/homepage.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/Signup.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/score/score.component.jsx",["82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React, { useState } from 'react';\nimport { Button, Modal, Label, Radio, Form, Icon } from 'semantic-ui-react';\nimport TableGridPage from '../../pages/table-grid';\nimport batsManList from '../../data';\nimport matchData from '../../tempData';\nimport SelectionModalPage from '../../pages/modal/selection-modal';\nimport { firestore } from '../../firebase/config';\n\nconst exampleReducer = (state, action) => {\n  switch (action.type) {\n    case 'close':\n      return { open: false };\n    case 'open':\n      return { open: true, size: action.size, dimmer: action.dimmer };\n    default:\n      throw new Error('Unsupported action...');\n  }\n};\n\nconst ScorePage = ({ homeTeam, awayTeam }) => {\n  const [playerDoc, setPlayerDoc] = useState(null);\n  const [totalScore, setTotalScore] = useState(0);\n  const [totalWickets, setTotalWickets] = useState(0);\n  const [totalExtras, setTotalExtras] = useState(0);\n  const [totalBalls, setTotalBalls] = useState(0);\n  const [totalOvers, setTotalOvers] = useState(0);\n  const [isWicketFallen, setIsWicketFallen] = useState(false);\n  const [prgressiveOver, setPrgressiveOver] = useState([]);\n  const [striker, setStriker] = useState('bat1');\n  const [nonStriker, setNonStriker] = useState('bat2');\n  const [tempBatsmanList, setTempBatsmanList] = useState(batsManList);\n  const [currentBowler, setCurrentBowler] = useState({\n    id: 'bowl1',\n    name: 'Nathan Lyon',\n    balls: 0,\n    overs: 0,\n    wickets: 0,\n    maidens: 0,\n    runsGiven: 0,\n    wides: 0,\n    nbs: 0,\n  });\n  const [bowlerDetails, setBowlerDetails] = useState({\n    bowl1: {\n      id: 'bowl1',\n      name: 'Nathan Lyon',\n      balls: 0,\n      overs: 0,\n      wickets: 0,\n      maidens: 0,\n      runsGiven: 0,\n      wides: 0,\n      nbs: 0,\n    },\n    bowl2: {\n      id: 'bowl2',\n      name: 'Michel Starc',\n      balls: 0,\n      overs: 0,\n      wickets: 0,\n      maidens: 0,\n      runsGiven: 0,\n      wides: 0,\n      nbs: 0,\n    },\n  });\n  const [batsmenDetails, setBatsmenDetails] = useState({\n    bat1: {\n      id: 'bat1',\n      name: 'Rohil Sharma',\n      runs: 0,\n      ballsPlayed: 0,\n      fours: 0,\n      sixes: 0,\n    },\n    bat2: {\n      id: 'bat2',\n      name: 'Shubham Gill',\n      runs: 0,\n      ballsPlayed: 0,\n      fours: 0,\n      sixes: 0,\n    },\n  });\n\n  const updateWickets = () => {\n    if (totalWickets <= 10) {\n      setIsWicketFallen(true);\n      setTotalWickets(totalWickets + 1);\n      setPrgressiveOver(prgressiveOver.concat('W'));\n      setCurrentBowler({\n        ...currentBowler,\n        wickets: currentBowler['wickets']++,\n      });\n    }\n    updateOver();\n    setPrgressiveOver(prgressiveOver.concat('W'));\n  };\n\n  const updateExtras = (extras, score) => {\n    switch (extras) {\n      case 'WB':\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        setCurrentBowler({\n          ...currentBowler,\n          wides: currentBowler['wides'] + 1,\n        });\n        break;\n      case 'NB':\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        setCurrentBowler({\n          ...currentBowler,\n          wides: currentBowler['nbs'] + 1,\n        });\n        break;\n      case 'B':\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        break;\n      case 'LB':\n        setTotalScore(totalScore + 1);\n        setTotalExtras(totalExtras + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeStriker = () => {\n    const temp = striker;\n    setStriker(nonStriker);\n    setNonStriker(temp);\n  };\n\n  const updateBatsMan = () => {};\n\n  const updateBatsManScore = (score) => {\n    switch (score) {\n      case 1:\n      case 3:\n        batsmenDetails[striker]['runs'] += score;\n        changeStriker();\n        break;\n      case 2:\n        batsmenDetails[striker]['runs'] += score;\n        break;\n      case 4:\n        batsmenDetails[striker]['runs'] += score;\n        batsmenDetails[striker]['fours']++;\n        break;\n      case 6:\n        batsmenDetails[striker]['runs'] += score;\n        batsmenDetails[striker]['sixes']++;\n        break;\n      default:\n        break;\n    }\n    batsmenDetails[striker]['ballsPlayed']++;\n  };\n\n  const currentPartnerShip = () => {\n    const runTotal =\n      batsmenDetails['bat1']['runs'] + batsmenDetails['bat2']['runs'];\n    const ballTotal =\n      batsmenDetails['bat1']['ballsPlayed'] +\n      batsmenDetails['bat2']['ballsPlayed'];\n    return `${runTotal}(${ballTotal})`;\n  };\n\n  const updateScore = (score) => {\n    setTotalScore(totalScore + score);\n    updateBatsManScore(score);\n    const bowlId = currentBowler['id'];\n    // setCurrentBowler({\n    //   ...currentBowler,\n    //   runsGiven: currentBowler['runsGiven'] + score,\n    // });\n    currentBowler['runsGiven'] = currentBowler['runsGiven'] + score;\n    setBowlerDetails((preStateValue) => ({\n      ...preStateValue,\n      [bowlId]: currentBowler,\n    }));\n    setPrgressiveOver(prgressiveOver.concat(score));\n    updateOver();\n  };\n\n  const updateOver = () => {\n    const _totalBalls = totalBalls + 1;\n    const _totalOvers = calcOver(_totalBalls);\n    setTotalBalls(_totalBalls);\n    setTotalOvers(_totalOvers);\n    const _currentBowlerTotalBalls = currentBowler['balls'] + 1;\n    setCurrentBowler({\n      ...currentBowler,\n      balls: _currentBowlerTotalBalls,\n      overs: calcOver(_currentBowlerTotalBalls),\n    });\n    if (_totalOvers % 1 === 0) {\n      changeStriker();\n      openModal();\n    }\n  };\n\n  const calcOver = (balls) => {\n    return Math.floor(balls / 6) + (balls % 6) / 10;\n  };\n\n  const updateBowler = (bowler) => {\n    if (currentBowler['id'] !== bowler['id']) {\n      setCurrentBowler(bowler);\n      setBowlerDetails((prevStateValue) => ({\n        ...prevStateValue,\n        [currentBowler['id']]: currentBowler,\n      }));\n      dispatch({ type: 'close' });\n    } else {\n      alert('You can not select same bowler again!');\n    }\n  };\n\n  const selectBatsman = (batsman) => {\n    console.log('Select batsman logic goes here!');\n    setIsWicketFallen(false);\n    dispatch({ type: 'close' });\n  };\n\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    open: false,\n    size: undefined,\n  });\n  const { open, size, dimmer } = state;\n\n  const openModal = () => {\n    console.log(isWicketFallen);\n    dispatch({ type: 'open', size: 'mini', dimmer: 'blurring' });\n  };\n\n  const handleClick = () => {\n    console.log('Clickeddd from child!');\n  };\n\n  React.useEffect(() => {\n    console.log('Effect called');\n    setIsWicketFallen(true);\n    console.log(isWicketFallen);\n    if (isWicketFallen) {\n      openModal();\n    }\n  }, [totalWickets]);\n\n  const tempSetDemoData = async () => {\n    const batData = {\n      name: 'Rohil Sharma',\n      runs: 0,\n      ballsPlayed: 0,\n      fours: 0,\n      sixes: 0,\n      isOut: false,\n      isStriker: false,\n    };\n    const bowlData = {\n      name: 'Nathan Lyon',\n      balls: 0,\n      overs: 0,\n      wickets: 0,\n      maidens: 0,\n      runsGiven: 0,\n      wides: 0,\n      nbs: 0,\n      isCurrentBowler: false,\n    };\n\n    // return res;\n  };\n\n  const readCollection = async () => {\n    const citiesRef = firestore.collection('matches');\n    const snapshot = await citiesRef.get();\n    snapshot.forEach((doc) => {\n      console.log(doc.id, '=>', doc.data());\n    });\n  };\n\n  React.useEffect(() => {\n    const docRef = firestore.collection('matches').doc('xRYLB0CguU2ZfGRmpkAa');\n    // const docRef = firestore.collection(\n    //   '/matches/xRYLB0CguU2ZfGRmpkAa/inn1/batStats'\n    // );\n    // firestore.collection('players').doc('0TFXRjMv7Jl6VPaQOSkK').get()\n    //   .then(snapshot => {\n    //     snapshot.forEach(doc => {\n    //       const data = doc.data();\n    //       console.log(doc.id, data);\n    //     });\n    //   })\n    //   .catch(err => {\n    //     console.log('Error getting documents', err);\n    //   });\n    // docRef.get().then((document) => {\n    //   if (document.exists) {\n    //     console.log(document.data());\n    //   }\n    // });\n    readCollection();\n    // tempSetDemoData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"tc\">\n        <h1 className=\"mb0\">\n          {homeTeam} <span> VS </span>\n          {awayTeam}\n        </h1>\n        <h1 className=\"ma0\">\n          <p className=\"mb0\">{homeTeam}</p>\n          {totalScore} / {totalWickets}\n          <p className=\"f6 ml2\">(Extras: {totalExtras})</p>\n          <p className=\"f6\">Overs: {totalOvers}</p>\n        </h1>\n        <h4 className=\"mt0 pv2\">Current Partnership: {currentPartnerShip()}</h4>\n      </div>\n      <TableGridPage\n        isBatsMan=\"true\"\n        batsmenDetails={batsmenDetails}\n        currentBowler={currentBowler}\n        handleClick={handleClick}\n      />\n      <div className=\"mh3\">\n        <Button size=\"huge\" onClick={() => updateScore(1)}>\n          1\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(2)}>\n          2\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(3)}>\n          3\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(4)}>\n          4\n        </Button>\n        <Button size=\"huge\" onClick={() => updateScore(6)}>\n          6\n        </Button>\n        <Button size=\"huge\" onClick={updateWickets}>\n          Wicket\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras('WB')}>\n          WB\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras('NB')}>\n          NB\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras('B')}>\n          B\n        </Button>\n        <Button size=\"huge\" onClick={() => updateExtras('LB')}>\n          LB\n        </Button>\n        <Button\n          icon\n          size=\"huge\"\n          onClick={() =>\n            dispatch({\n              type: 'open',\n              size: 'mini',\n              dimmer: 'blurring',\n            })\n          }\n        >\n          <Icon name=\"refresh\" />\n        </Button>\n      </div>\n      {/* <SelectionModalPage\n        bowlerDetails={bowlerDetails}\n        currentBowler={currentBowler}\n        updateBowler={updateBowler}\n      /> */}\n      <>\n        {isWicketFallen ? (\n          <Modal\n            size={size}\n            open={open}\n            dimmer={dimmer}\n            onClose={() => dispatch({ type: 'close' })}\n          >\n            <Modal.Header>Select Next Batsman</Modal.Header>\n            <Modal.Content>\n              <p>Select Next Batsman</p>\n              <div>\n                {Object.entries(tempBatsmanList).map(([key, value], i) => (\n                  <Form.Field key={i}>\n                    <Radio\n                      className=\"b\"\n                      key={i}\n                      label={value['name']}\n                      disabled={striker === value['id']}\n                      onChange={() => selectBatsman(value)}\n                    />\n                  </Form.Field>\n                ))}\n              </div>\n            </Modal.Content>\n          </Modal>\n        ) : (\n          <Modal\n            size={size}\n            open={open}\n            dimmer={dimmer}\n            onClose={() => dispatch({ type: 'close' })}\n          >\n            <Modal.Header>Chanage Bowler</Modal.Header>\n            <Modal.Content>\n              <p>Are you sure you want to delete your account</p>\n              <div>\n                {Object.entries(bowlerDetails).map(([key, value], i) => (\n                  <Form.Field key={i}>\n                    <Radio\n                      className=\"b\"\n                      key={i}\n                      label={value['name']}\n                      disabled={currentBowler['id'] === value['id']}\n                      onChange={() => updateBowler(value)}\n                    />\n                  </Form.Field>\n                ))}\n              </div>\n            </Modal.Content>\n          </Modal>\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default ScorePage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/addPlayer.component.jsx",["95","96","97","98"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport uuid from \"react-uuid\";\nimport { firestore } from \"../../firebase/config\";\nimport { Button, Input, Form } from \"semantic-ui-react\";\nimport PlayerListPage from \"../../pages/player-list/player-list\";\n\nimport { MatchContext } from \"../../providers/match/match.provider\";\nimport AddPlayerFormPage from \"./add-player-form.component\";\n\nconst AddPlayerPage = () => {\n  let history = useHistory();\n  const { addPlayer, removePlayer, playerList } = useContext(MatchContext);\n  const [awayPlayer, setAwayPlayer] = useState(\"\");\n  const [homePlayer, setHomePlayer] = useState(\"\");\n  // const [homeTeamList, setHomeTeamList] = useState([]);\n  // const [awayTeamList, setAwayTeamList] = useState([]);\n  const [isPlayerListFinalized, setIsPlayerListFinalized] = useState(false);\n\n  const handleHomeTeamSubmit = (evt, isHomeTeam, teamCategory) => {\n    evt.preventDefault();\n    const homePlayerObj = {\n      id: uuid(),\n      playerName: isHomeTeam ? homePlayer : awayPlayer,\n    };\n    addPlayer(homePlayerObj, isHomeTeam);\n    isHomeTeam ? setHomePlayer(\"\") : setAwayPlayer(\"\");\n    // setHomeTeamList(homeTeamList.concat(homePlayerCopy));\n    // setHomePlayer('');\n    // if (playerList[teamCategory].length === 10) {\n    //   updateDb(teamCategory);\n    // }\n  };\n\n  const addPlayerName = (playerName, isHomeTeam) => {\n    isHomeTeam ? setHomePlayer(playerName) : setAwayPlayer(playerName);\n  };\n\n  const handleDelete = (playerId, isHomeTeam) => {\n    removePlayer(playerId, isHomeTeam);\n  };\n\n  const updateDb = async (teamCategory) => {\n    await firestore\n      .collection(\"matches\")\n      .doc()\n      .set({\n        playerList: {\n          homeTeam: playerList[teamCategory],\n        },\n      });\n  };\n\n  const confirmPlayerList = () => {\n    history.push(\"/currentStats\");\n  };\n  return (\n    <>\n      <div className=\"flex justify-center pa2\">\n        <div className=\"outline w-100 pa3 mr2\">\n          <AddPlayerFormPage\n            handleHomeTeamSubmit={handleHomeTeamSubmit}\n            playerList={playerList}\n            addPlayerName={addPlayerName}\n            homePlayer={homePlayer}\n            teamCategory=\"homeTeam\"\n            isHomeTeam={true}\n          />\n\n          {playerList.homeTeamClone !== null ||\n          playerList.homeTeamClone !== undefined ? (\n            <PlayerListPage\n              playerList={playerList.homeTeam}\n              playerListClone={playerList.homeTeamClone}\n              handleDelete={handleDelete}\n              isHomeTeam={true}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"outline w-100 pa3 mr2\">\n          <AddPlayerFormPage\n            handleHomeTeamSubmit={handleHomeTeamSubmit}\n            playerList={playerList}\n            addPlayerName={addPlayerName}\n            homePlayer={awayPlayer}\n            teamCategory=\"awayTeam\"\n            isHomeTeam={false}\n          />\n          {playerList.homeTeamClone !== null ||\n          playerList.homeTeamClone !== undefined ? (\n            <PlayerListPage\n              playerList={playerList.awayTeam}\n              playerListClone={playerList.awayTeamClone}\n              handleDelete={handleDelete}\n              isHomeTeam={true}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <Button\n          type=\"button\"\n          onClick={confirmPlayerList}\n          disabled={isPlayerListFinalized}\n        >\n          Confirm Teams\n        </Button>\n      </div>\n      <div>\n        {playerList.homeTeamClone !== null ||\n        playerList.homeTeamClone !== undefined ? (\n          Object.keys(playerList.homeTeamClone).map((keyName, i) => (\n            <li className=\"travelcompany-input\" key={i}>\n              <span className=\"input-label\">\n                key: {i} Name: {playerList.homeTeamClone[keyName][\"playerName\"]}\n              </span>\n            </li>\n          ))\n        ) : (\n          <p>List is not ready</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default AddPlayerPage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/components/match-details/match-details.component.jsx",["99","100"],"import React, { useState, useContext } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Button, Input, Form } from \"semantic-ui-react\";\nimport { MatchContext } from \"../../providers/match/match.provider\";\n\nconst MatchDetails = () => {\n  const { addMatchDetails } = useContext(MatchContext);\n  let history = useHistory();\n\n  const [state, setstate] = useState({\n    homeTeamName: \"\",\n    awayTeamName: \"\",\n    venue: \"\",\n    tournametName: \"\",\n    tossWonBy: \"\",\n    electedTo: \"\",\n    teamBatingFirst: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(state);\n    addMatchDetails(state);\n    setstate({\n      homeTeamName: \"\",\n      awayTeamName: \"\",\n      venue: \"\",\n      tournametName: \"\",\n      tossWonBy: \"\",\n      electedTo: \"\",\n      teamBatingFirst: \"\",\n    });\n    history.push(\"/addPlayers\");\n  };\n\n  return (\n    <div className=\"pa3\">\n      <h3>Add Match Details</h3>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <label>Tournamet Name</label>\n          <Input\n            placeholder=\"Tournamet Name\"\n            name=\"tourName\"\n            value={state.tournametName}\n            onChange={(e) =>\n              setstate({ ...state, tournametName: e.target.value })\n            }\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Venue Name</label>\n          <Input\n            placeholder=\"Venue Name\"\n            name=\"venue\"\n            value={state.venue}\n            onChange={(e) => setstate({ ...state, venue: e.target.value })}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Home Team</label>\n          <Input\n            placeholder=\"Home Team Name\"\n            name=\"homeTeamName\"\n            value={state.homeTeamName}\n            onChange={(e) =>\n              setstate({ ...state, homeTeamName: e.target.value })\n            }\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Away Team</label>\n          <Input\n            placeholder=\"Away Team Name\"\n            name=\"awayTeamName\"\n            value={state.awayTeamName}\n            onChange={(e) =>\n              setstate({ ...state, awayTeamName: e.target.value })\n            }\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Toss Won By</label>\n          <select\n            className=\"ui selection dropdown mr3\"\n            placeholder=\"Toss Won By\"\n            value={state.tossWonBy}\n            onChange={(e) => setstate({ ...state, tossWonBy: e.target.value })}\n          >\n            <option key=\"homeTeamName\" value={state.homeTeamName}>\n              {state.homeTeamName}\n            </option>\n            <option key=\"awayTeamName\" value={state.awayTeamName}>\n              {state.awayTeamName}\n            </option>\n          </select>\n        </Form.Field>\n        <Form.Field>\n          <label>Elected To</label>\n          <select\n            className=\"ui selection dropdown mr3\"\n            placeholder=\"Elected To\"\n            value={state.electedTo}\n            onChange={(e) => setstate({ ...state, electedTo: e.target.value })}\n          >\n            <option key=\"bat\" value=\"BAT\">\n              BAT\n            </option>\n            <option key=\"bowl\" value=\"BOWL\">\n              BOWL\n            </option>\n          </select>\n        </Form.Field>\n        <Form.Field>\n          <label>Team Batting First</label>\n          <select\n            className=\"ui selection dropdown mr3\"\n            placeholder=\"Toss Won By\"\n            value={state.tossWonBy}\n            onChange={(e) =>\n              setstate({ ...state, teamBatingFirst: e.target.value })\n            }\n          >\n            <option key=\"key01\" value={state.homeTeamName}>\n              {state.homeTeamName}\n            </option>\n            <option key=\"key02\" value={state.awayTeamName}>\n              {state.awayTeamName}\n            </option>\n          </select>\n        </Form.Field>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default MatchDetails;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/providers/match/match.util.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/data.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/tempData.js",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/table-grid.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/add-player/add-player-form.component.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/pages/modal/selection-modal.jsx",["101"],"import React from 'react';\nimport { Modal, Form, Radio } from 'semantic-ui-react';\n\nexport const SelectionModalPage = ({\n  bowlerDetails,\n  currentBowler,\n  updateBowler,\n}) => {\n  const exampleReducer = (state, action) => {\n    switch (action.type) {\n      case 'close':\n        return { open: false };\n      case 'open':\n        return { open: true, size: action.size, dimmer: action.dimmer };\n      default:\n        throw new Error('Unsupported action...');\n    }\n  };\n\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    open: false,\n    size: undefined,\n  });\n  const { open, size, dimmer } = state;\n\n  const openModal = () => {\n    dispatch({ type: 'open', size: 'mini', dimmer: 'blurring' });\n  };\n  return (\n    <Modal\n      size={size}\n      open={open}\n      dimmer={dimmer}\n      onClose={() => dispatch({ type: 'close' })}\n    >\n      <Modal.Header>Delete Your Account</Modal.Header>\n      <Modal.Content>\n        <p>Are you sure you want to delete your account</p>\n        <div className=\"changeBowler\">\n          {Object.entries(bowlerDetails).map(([key, value], i) => (\n            <Form.Field key={i}>\n              <Radio\n                className=\"b\"\n                key={i}\n                label={value['name']}\n                disabled={currentBowler['id'] === value['id']}\n                onChange={() => updateBowler(value)}\n              />\n            </Form.Field>\n          ))}\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default SelectionModalPage;\n","/home/vinay/Documents/project/circkzy-scoring-app/src/pages/player-list/player-list.jsx",[],"/home/vinay/Documents/project/circkzy-scoring-app/src/components/initial-player-details/initial-player-details.component.jsx",["102","103","104","105"],"import React, { useState, useContext } from \"react\";\nimport { Button, Form, Label, Select } from \"semantic-ui-react\";\n\nimport { MatchContext } from \"../../providers/match/match.provider\";\n\nconst InitialPlayerDetails = () => {\n  const [currentStats, setCurrentStats] = useState({\n    striker: \"\",\n    nonStriker: \"\",\n    currentBowler: \"\",\n  });\n  const { playerList } = useContext(MatchContext);\n  const { homeTeam, awayTeam } = playerList;\n  //   const updateCurrentStats = (playerId) = {\n  //       setCurrentStats({...currentStats, striker: playerId})\n  //   }\n  return (\n    <>\n      <div className=\"pa3\">\n        <label className=\"f6 b db mb2 pr2\">Select Striker</label>\n        <select\n          className=\"ui selection dropdown mr3\"\n          placeholder=\"Select your country\"\n          value={currentStats.striker}\n          onChange={(e) =>\n            setCurrentStats({ ...currentStats, striker: e.target.value })\n          }\n        >\n          {homeTeam.map((option) => (\n            <option key={option.id} value={option.playerName}>\n              {option.playerName}\n            </option>\n          ))}\n        </select>\n        <label className=\"f6 b db mb2 pr2\">Select Non-Striker</label>\n        <select\n          className=\"ui selection dropdown mr3\"\n          placeholder=\"Select your country\"\n          value={currentStats.nonStriker}\n          onChange={(e) =>\n            setCurrentStats({ ...currentStats, nonStriker: e.target.value })\n          }\n        >\n          {homeTeam.map((option) => (\n            <option key={option.id} value={option.playerName}>\n              {option.playerName}\n            </option>\n          ))}\n        </select>\n        <label className=\"f6 b db mb2 pr2\">Select Opening Bowler</label>\n        <select\n          className=\"ui selection dropdown mr3\"\n          placeholder=\"Select your country\"\n          value={currentStats.currentBowler}\n          onChange={(e) =>\n            setCurrentStats({ ...currentStats, currentBowler: e.target.value })\n          }\n        >\n          {awayTeam.map((option) => (\n            <option key={option.id} value={option.playerName}>\n              {option.playerName}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default InitialPlayerDetails;\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":40,"nodeType":"112","messageId":"113","endLine":3,"endColumn":46},{"ruleId":"110","severity":1,"message":"114","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":16},{"ruleId":"110","severity":1,"message":"115","line":6,"column":3,"nodeType":"112","messageId":"113","endLine":6,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":2,"column":25,"nodeType":"112","messageId":"113","endLine":2,"endColumn":30},{"ruleId":"110","severity":1,"message":"117","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":26},{"ruleId":"110","severity":1,"message":"119","line":21,"column":10,"nodeType":"112","messageId":"113","endLine":21,"endColumn":19},{"ruleId":"110","severity":1,"message":"120","line":21,"column":21,"nodeType":"112","messageId":"113","endLine":21,"endColumn":33},{"ruleId":"110","severity":1,"message":"121","line":31,"column":27,"nodeType":"112","messageId":"113","endLine":31,"endColumn":45},{"ruleId":"110","severity":1,"message":"122","line":67,"column":26,"nodeType":"112","messageId":"113","endLine":67,"endColumn":43},{"ruleId":"110","severity":1,"message":"123","line":137,"column":9,"nodeType":"112","messageId":"113","endLine":137,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":251,"column":6,"nodeType":"126","endLine":251,"endColumn":20,"suggestions":"127"},{"ruleId":"110","severity":1,"message":"128","line":253,"column":9,"nodeType":"112","messageId":"113","endLine":253,"endColumn":24},{"ruleId":"110","severity":1,"message":"129","line":254,"column":11,"nodeType":"112","messageId":"113","endLine":254,"endColumn":18},{"ruleId":"110","severity":1,"message":"130","line":263,"column":11,"nodeType":"112","messageId":"113","endLine":263,"endColumn":19},{"ruleId":"110","severity":1,"message":"131","line":287,"column":11,"nodeType":"112","messageId":"113","endLine":287,"endColumn":17},{"ruleId":"110","severity":1,"message":"132","line":5,"column":18,"nodeType":"112","messageId":"113","endLine":5,"endColumn":23},{"ruleId":"110","severity":1,"message":"133","line":5,"column":25,"nodeType":"112","messageId":"113","endLine":5,"endColumn":29},{"ruleId":"110","severity":1,"message":"134","line":18,"column":33,"nodeType":"112","messageId":"113","endLine":18,"endColumn":57},{"ruleId":"110","severity":1,"message":"135","line":43,"column":9,"nodeType":"112","messageId":"113","endLine":43,"endColumn":17},{"ruleId":"110","severity":1,"message":"136","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"137","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":24},{"ruleId":"110","severity":1,"message":"138","line":26,"column":9,"nodeType":"112","messageId":"113","endLine":26,"endColumn":18},{"ruleId":"110","severity":1,"message":"139","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"133","line":2,"column":18,"nodeType":"112","messageId":"113","endLine":2,"endColumn":22},{"ruleId":"110","severity":1,"message":"116","line":2,"column":24,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"140","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'HomePage' is defined but never used.","'addPlayerObj' is defined but never used.","'Label' is defined but never used.","'matchData' is defined but never used.","'SelectionModalPage' is defined but never used.","'playerDoc' is assigned a value but never used.","'setPlayerDoc' is assigned a value but never used.","'setTempBatsmanList' is assigned a value but never used.","'setBatsmenDetails' is assigned a value but never used.","'updateBatsMan' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'isWicketFallen' and 'openModal'. Either include them or remove the dependency array.","ArrayExpression",["143"],"'tempSetDemoData' is assigned a value but never used.","'batData' is assigned a value but never used.","'bowlData' is assigned a value but never used.","'docRef' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'setIsPlayerListFinalized' is assigned a value but never used.","'updateDb' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'openModal' is assigned a value but never used.","'Button' is defined but never used.","'Select' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [isWicketFallen, openModal, totalWickets]",{"range":"146","text":"147"},[6599,6613],"[isWicketFallen, openModal, totalWickets]"]